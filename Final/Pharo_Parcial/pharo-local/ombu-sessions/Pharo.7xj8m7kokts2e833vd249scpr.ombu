OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-11-14T08:23:57.487286+01:00' ],		#prior : OmReference [ 'Pharo.13pw5lcp9fzipfko0patipem4', '10' ],		#self : OmReference [ '1' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'DevilsAndAngels-jjddpp.5'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ],		#time : DateAndTime [ '2019-11-14T08:23:57.705023+01:00' ],		#trigger : @3	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Tardis\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #Tardis,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Tardis class\r\tinstanceVariableNames: \'past future\''				},				#name : #'Tardis class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Tardis class',							#isMetaSide : true						},						#name : #past,						#parent : @12					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Tardis class',							#isMetaSide : true						},						#name : #future,						#parent : @12					}				],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Tardis,					#isMetaSide : false				},				#parent : @7,				#content : 'A HeavenHell is .\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A HeavenHell is .\r',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ],		#time : DateAndTime [ '2019-11-14T08:23:57.705802+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #DevilsAndAngels,		#affectedPackageName : #DevilsAndAngels	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ],		#time : DateAndTime [ '2019-11-14T08:23:57.759499+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Tardis\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'DevilsAndAngels\''			},			#name : #Tardis,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Tardis class\r\tinstanceVariableNames: \'past future\''				},				#name : #'Tardis class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Tardis class',							#isMetaSide : true						},						#name : #past,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Tardis class',							#isMetaSide : true						},						#name : #future,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Tardis,					#isMetaSide : false				},				#parent : @8,				#content : 'A HeavenHell is .\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #DevilsAndAngels,			#package : #DevilsAndAngels,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ],		#time : DateAndTime [ '2019-11-14T08:23:57.768276+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #TestAlgorithms\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #TestAlgorithms,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TestAlgorithms class\r\tinstanceVariableNames: \'aux\''				},				#name : #'TestAlgorithms class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'TestAlgorithms class',							#isMetaSide : true						},						#name : #aux,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TestAlgorithms,					#isMetaSide : false				},				#parent : @8,				#content : 'A TestAlgorithms is .\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A TestAlgorithms is .\r',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ],		#time : DateAndTime [ '2019-11-14T08:23:57.76968+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #TestAlgorithms\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'DevilsAndAngels\''			},			#name : #TestAlgorithms,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TestAlgorithms class\r\tinstanceVariableNames: \'aux\''				},				#name : #'TestAlgorithms class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'TestAlgorithms class',							#isMetaSide : true						},						#name : #aux,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TestAlgorithms,					#isMetaSide : false				},				#parent : @8,				#content : 'A TestAlgorithms is .\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #DevilsAndAngels,			#package : #DevilsAndAngels,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ],		#time : DateAndTime [ '2019-11-14T08:23:57.773876+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Stack',				#traitCompositionSource : '{}',				#definitionSource : 'Stack subclass: #TimeLordsStack\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #TimeLordsStack,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TimeLordsStack class\r\tinstanceVariableNames: \'\''				},				#name : #'TimeLordsStack class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TimeLordsStack,					#isMetaSide : false				},				#parent : @8,				#content : 'A HeavenlyStack is .\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A HeavenlyStack is .\r',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ],		#time : DateAndTime [ '2019-11-14T08:23:57.77618+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Stack',				#traitCompositionSource : '{}',				#definitionSource : 'Stack subclass: #TimeLordsStack\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'DevilsAndAngels\''			},			#name : #TimeLordsStack,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TimeLordsStack class\r\tinstanceVariableNames: \'\''				},				#name : #'TimeLordsStack class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TimeLordsStack,					#isMetaSide : false				},				#parent : @8,				#content : 'A HeavenlyStack is .\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #DevilsAndAngels,			#package : #DevilsAndAngels,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ],		#time : DateAndTime [ '2019-11-14T08:23:57.798695+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #'angelPloraner:',			#protocol : #control-handling,			#sourceCode : 'angelPloraner: anObject \r\r\t^ Continuation callcc: [ :k | \t\r\t\t     self future push: k. \r\t\t     (self past pop) value: anObject  ]. ',			#stamp : 'jjddpp 11/23/2014 16:50',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ],		#time : DateAndTime [ '2019-11-14T08:23:57.801602+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #'doctor:',			#protocol : #control-handling,			#sourceCode : 'doctor: anObject \r\r\t^ (self future pop) value: anObject ',			#stamp : 'jjddpp 11/23/2014 16:49',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ],		#time : DateAndTime [ '2019-11-14T08:23:57.802922+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #'fita:',			#protocol : #control-handling,			#sourceCode : 'fita: anObject \t\r\r\t^ Continuation callcc: [ :k | self past push: k.  ^ anObject  ]. \r',			#stamp : 'jjddpp 11/23/2014 16:49',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ],		#time : DateAndTime [ '2019-11-14T08:23:57.804061+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #future,			#protocol : #accessing,			#sourceCode : 'future\r\t^ future',			#stamp : 'jjddpp 11/20/2014 16:55',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ],		#time : DateAndTime [ '2019-11-14T08:23:57.805015+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #'future:',			#protocol : #accessing,			#sourceCode : 'future: anObject\r\tfuture := anObject.',			#stamp : 'jjddpp 11/20/2014 17:19',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ],		#time : DateAndTime [ '2019-11-14T08:23:57.806049+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'initialize - release',			#sourceCode : 'initialize\r\tsuper initialize.\r\tself reset.\r\t',			#stamp : 'jjddpp 11/20/2014 16:54',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ],		#time : DateAndTime [ '2019-11-14T08:23:57.806954+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #past,			#protocol : #accessing,			#sourceCode : 'past \r\t^ past',			#stamp : 'jjddpp 11/20/2014 16:55',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ],		#time : DateAndTime [ '2019-11-14T08:23:57.807856+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #'past:',			#protocol : #accessing,			#sourceCode : 'past: anObject\r\tpast := anObject.',			#stamp : 'jjddpp 11/20/2014 17:18',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ],		#time : DateAndTime [ '2019-11-14T08:23:57.810312+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #reset,			#protocol : #'initialize - release',			#sourceCode : 'reset\r\tself past: TimeLordsStack new.\r\tself future: TimeLordsStack new.',			#stamp : 'jjddpp 11/23/2014 16:48',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ],		#time : DateAndTime [ '2019-11-14T08:23:57.811376+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TestAlgorithms class',				#isMetaSide : true			},			#name : #TardisExample,			#protocol : #Algorithms,			#sourceCode : 'TardisExample\r\tTardis initialize.\r\t(self auxWith: $a and: ( (self auxWith: $b and:  (Tardis fita: 3)) = 4 ) )\r\t\tifTrue: [  \tTranscript show: \'aqui!\'; cr.\r\t\t\t\t\tself auxWith: $c and: (Tardis doctor: \'tot va be\') .  ]\r\t\tifFalse: [ \r\t\t\t(self auxWith: $d and: ( (self auxWith: $e and:  (Tardis fita: 4)) = 5 ) )\r\t\t\t\tifTrue: [ self auxWith: $f and: (Tardis doctor: (self auxWith: $g and:  (Tardis angelPloraner: 4))) ]\r\t\t\t\tifFalse: [ Transcript show: \'hem arribat fins aqui!\'; cr. \r\t\t\t\t\t\t  self auxWith: $h and: (Tardis angelPloraner: 5).\t] ]',			#stamp : 'jjddpp 11/23/2014 16:51',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ],		#time : DateAndTime [ '2019-11-14T08:23:57.812515+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TestAlgorithms class',				#isMetaSide : true			},			#name : #'auxParenthesis:and:and:',			#protocol : #private,			#sourceCode : 'auxParenthesis: n and: p and: con \r\t|  tmpStack |\r\ttmpStack := con deepCopy.\r\tn = 0 ifTrue: [ con isEmpty ifTrue: [ 1 to: p - 1 do: [ : i | Transcript show: (aux at: i) asString  ]. \r\t\t\t\t\t\t\t\t\t\tTranscript cr.  ]\r\t\t\t\t\t\t\tifFalse: [ \t| nn |\r\t\t\t\t\t\t\t\t\t\taux at: p put: \')\'.\r\t\t\t\t\t\t\t\t\t\tnn := tmpStack pop.\r\t\t\t\t\t\t\t\t\t\tself auxParenthesis: nn and: (p + 1)  and: tmpStack.  ]  ]\r\t\tifFalse: [ \taux at: p put: \'(\'.\r\t\t\t\t\t 0 to: n - 1 do: [ : i |\r\t\t\t\t\t\t\t\t\ttmpStack push: (n - i - 1).\r\t\t\t\t\t\t\t\t\tself auxParenthesis: i and: p + 1 and: tmpStack.\r\t\t\t\t\t\t\t\t\ttmpStack pop.  ] ] \r\t\t\t\t\t\t\t',			#stamp : 'jjddpp 11/20/2014 16:24',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ],		#time : DateAndTime [ '2019-11-14T08:23:57.813451+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TestAlgorithms class',				#isMetaSide : true			},			#name : #'auxWith:and:',			#protocol : #private,			#sourceCode : 'auxWith: anObject and: anotherObject\r\tTranscript show: \'==> \', anObject asString , \' : \', anotherObject asString; cr.\r\t^ anotherObject\r\t',			#stamp : 'jjddpp 11/23/2014 16:43',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ],		#time : DateAndTime [ '2019-11-14T08:23:57.814361+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TestAlgorithms class',				#isMetaSide : true			},			#name : #'parenthesis:and:and:',			#protocol : #Algorithms,			#sourceCode : 'parenthesis: n and: p and: con \r\taux := Array new: (n * 2).\r\tself auxParenthesis: n and: p and: con.\r\t',			#stamp : 'jjddpp 11/20/2014 16:07',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ],		#time : DateAndTime [ '2019-11-14T08:23:57.815199+01:00' ],		#trigger : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TimeLordsStack,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\t"Returns the first element and remove it from the stack.\r\tThere will always be an identity function in the bottom of the stack"\r\r\tself isEmpty ifTrue: [ ^ [ :x | x ] ].\r\t^self removeFirst\r\t',			#stamp : 'jjddpp 10/28/2014 17:10',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-11-14T08:24:19.995348+01:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'Reflection-Complete-jjddpp.6'		]	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ],		#time : DateAndTime [ '2019-11-14T08:24:20.086275+01:00' ],		#trigger : @3	},	#content : EpCategoryAddition {		#classCategoryName : #Reflection-Complete,		#affectedPackageName : #Reflection-Complete	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ],		#time : DateAndTime [ '2019-11-14T08:24:20.139372+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #AnonymousObjectTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Reflection-Complete\''			},			#name : #AnonymousObjectTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'AnonymousObjectTest class\r\tinstanceVariableNames: \'\''				},				#name : #'AnonymousObjectTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnonymousObjectTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Reflection-Complete,			#package : #Reflection-Complete,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ],		#time : DateAndTime [ '2019-11-14T08:24:20.151376+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #DynamicAccessorsTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Reflection-Complete\''			},			#name : #DynamicAccessorsTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DynamicAccessorsTest class\r\tinstanceVariableNames: \'\''				},				#name : #'DynamicAccessorsTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DynamicAccessorsTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Reflection-Complete,			#package : #Reflection-Complete,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ],		#time : DateAndTime [ '2019-11-14T08:24:20.156072+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #LoggingProxyTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Reflection-Complete\''			},			#name : #LoggingProxyTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LoggingProxyTest class\r\tinstanceVariableNames: \'\''				},				#name : #'LoggingProxyTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LoggingProxyTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Reflection-Complete,			#package : #Reflection-Complete,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ],		#time : DateAndTime [ '2019-11-14T08:24:20.160037+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #MethodWrapperTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Reflection-Complete\''			},			#name : #MethodWrapperTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MethodWrapperTest class\r\tinstanceVariableNames: \'\''				},				#name : #'MethodWrapperTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MethodWrapperTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Reflection-Complete,			#package : #Reflection-Complete,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ],		#time : DateAndTime [ '2019-11-14T08:24:20.163829+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #MinimalObjectTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Reflection-Complete\''			},			#name : #MinimalObjectTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MinimalObjectTest class\r\tinstanceVariableNames: \'\''				},				#name : #'MinimalObjectTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MinimalObjectTest,					#isMetaSide : false				},				#parent : @8,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Reflection-Complete,			#package : #Reflection-Complete,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ],		#time : DateAndTime [ '2019-11-14T08:24:20.170105+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #ReflectionTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #ReflectionTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ReflectionTest class\r\tinstanceVariableNames: \'\''				},				#name : #'ReflectionTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ReflectionTest,					#isMetaSide : false				},				#parent : @8,				#content : 'Various demonstrations of reflective capabilities of Squeak.\rExamples from Marcus Denker and StÈphane Ducasse',				#stamp : 'on 3/24/2006 16:41'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Various demonstrations of reflective capabilities of Squeak.\rExamples from Marcus Denker and StÈphane Ducasse',		#newStamp : 'on 3/24/2006 16:41'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ],		#time : DateAndTime [ '2019-11-14T08:24:20.171704+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #ReflectionTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Reflection-Complete\''			},			#name : #ReflectionTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ReflectionTest class\r\tinstanceVariableNames: \'\''				},				#name : #'ReflectionTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ReflectionTest,					#isMetaSide : false				},				#parent : @8,				#content : 'Various demonstrations of reflective capabilities of Squeak.\rExamples from Marcus Denker and StÈphane Ducasse',				#stamp : 'on 3/24/2006 16:41'			},			#classVariables : OrderedCollection [ ],			#category : #Reflection-Complete,			#package : #Reflection-Complete,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ],		#time : DateAndTime [ '2019-11-14T08:24:20.175744+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #DynamicAccessors\r\tinstanceVariableNames: \'x y\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #DynamicAccessors,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DynamicAccessors,						#isMetaSide : false					},					#name : #x,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DynamicAccessors,						#isMetaSide : false					},					#name : #y,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DynamicAccessors class\r\tinstanceVariableNames: \'\''				},				#name : #'DynamicAccessors class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DynamicAccessors,					#isMetaSide : false				},				#parent : @8,				#content : 'A DynamicAccessors is .\r\rInstance Variables\r\tx:\t\t<Object>\r\rx\r\t- xxxxx\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A DynamicAccessors is .\r\rInstance Variables\r\tx:\t\t<Object>\r\rx\r\t- xxxxx\r',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ],		#time : DateAndTime [ '2019-11-14T08:24:20.177039+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #DynamicAccessors\r\tinstanceVariableNames: \'x y\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Reflection-Complete\''			},			#name : #DynamicAccessors,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DynamicAccessors,						#isMetaSide : false					},					#name : #x,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DynamicAccessors,						#isMetaSide : false					},					#name : #y,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DynamicAccessors class\r\tinstanceVariableNames: \'\''				},				#name : #'DynamicAccessors class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DynamicAccessors,					#isMetaSide : false				},				#parent : @8,				#content : 'A DynamicAccessors is .\r\rInstance Variables\r\tx:\t\t<Object>\r\rx\r\t- xxxxx\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Reflection-Complete,			#package : #Reflection-Complete,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ],		#time : DateAndTime [ '2019-11-14T08:24:20.180998+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #HaltDemo\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #HaltDemo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'HaltDemo class\r\tinstanceVariableNames: \'\''				},				#name : #'HaltDemo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #HaltDemo,					#isMetaSide : false				},				#parent : @8,				#content : 'HaltDemo new foo.\rHaltDemo new bar.\r\rOnly the second halts within foo.',				#stamp : 'on 3/28/2006 15:56'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'HaltDemo new foo.\rHaltDemo new bar.\r\rOnly the second halts within foo.',		#newStamp : 'on 3/28/2006 15:56'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ],		#time : DateAndTime [ '2019-11-14T08:24:20.182251+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #HaltDemo\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Reflection-Complete\''			},			#name : #HaltDemo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'HaltDemo class\r\tinstanceVariableNames: \'\''				},				#name : #'HaltDemo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #HaltDemo,					#isMetaSide : false				},				#parent : @8,				#content : 'HaltDemo new foo.\rHaltDemo new bar.\r\rOnly the second halts within foo.',				#stamp : 'on 3/28/2006 15:56'			},			#classVariables : OrderedCollection [ ],			#category : #Reflection-Complete,			#package : #Reflection-Complete,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ],		#time : DateAndTime [ '2019-11-14T08:24:20.185919+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LoggingMethodWrapper\r\tinstanceVariableNames: \'method reference invocationCount\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #LoggingMethodWrapper,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LoggingMethodWrapper,						#isMetaSide : false					},					#name : #method,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LoggingMethodWrapper,						#isMetaSide : false					},					#name : #reference,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LoggingMethodWrapper,						#isMetaSide : false					},					#name : #invocationCount,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LoggingMethodWrapper class\r\tinstanceVariableNames: \'\''				},				#name : #'LoggingMethodWrapper class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LoggingMethodWrapper,					#isMetaSide : false				},				#parent : @8,				#content : 'A LoggingMethodWrapper is .\r\rInstance Variables\r\tinvocationCount:\t\t<Object>\r\tmethod:\t\t<Object>\r\treference:\t\t<Object>\r\rinvocationCount\r\t- xxxxx\r\rmethod\r\t- xxxxx\r\rreference\r\t- xxxxx\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A LoggingMethodWrapper is .\r\rInstance Variables\r\tinvocationCount:\t\t<Object>\r\tmethod:\t\t<Object>\r\treference:\t\t<Object>\r\rinvocationCount\r\t- xxxxx\r\rmethod\r\t- xxxxx\r\rreference\r\t- xxxxx\r',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ],		#time : DateAndTime [ '2019-11-14T08:24:20.187112+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #LoggingMethodWrapper\r\tinstanceVariableNames: \'method reference invocationCount\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Reflection-Complete\''			},			#name : #LoggingMethodWrapper,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LoggingMethodWrapper,						#isMetaSide : false					},					#name : #method,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LoggingMethodWrapper,						#isMetaSide : false					},					#name : #reference,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LoggingMethodWrapper,						#isMetaSide : false					},					#name : #invocationCount,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LoggingMethodWrapper class\r\tinstanceVariableNames: \'\''				},				#name : #'LoggingMethodWrapper class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LoggingMethodWrapper,					#isMetaSide : false				},				#parent : @8,				#content : 'A LoggingMethodWrapper is .\r\rInstance Variables\r\tinvocationCount:\t\t<Object>\r\tmethod:\t\t<Object>\r\treference:\t\t<Object>\r\rinvocationCount\r\t- xxxxx\r\rmethod\r\t- xxxxx\r\rreference\r\t- xxxxx\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Reflection-Complete,			#package : #Reflection-Complete,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ],		#time : DateAndTime [ '2019-11-14T08:24:20.190894+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ProtoObject',				#traitCompositionSource : '{}',				#definitionSource : 'ProtoObject subclass: #LoggingProxy\r\tinstanceVariableNames: \'subject invocationCount\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #LoggingProxy,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LoggingProxy,						#isMetaSide : false					},					#name : #subject,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LoggingProxy,						#isMetaSide : false					},					#name : #invocationCount,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LoggingProxy class\r\tinstanceVariableNames: \'\''				},				#name : #'LoggingProxy class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LoggingProxy,					#isMetaSide : false				},				#parent : @8,				#content : 'A LoggingProxy is .\r\rInstance Variables\r\tinvocationCount:\t\t<Object>\r\tsubject:\t\t<Object>\r\rinvocationCount\r\t- xxxxx\r\rsubject\r\t- xxxxx\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A LoggingProxy is .\r\rInstance Variables\r\tinvocationCount:\t\t<Object>\r\tsubject:\t\t<Object>\r\rinvocationCount\r\t- xxxxx\r\rsubject\r\t- xxxxx\r',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ],		#time : DateAndTime [ '2019-11-14T08:24:20.19205+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ProtoObject',				#traitCompositionSource : '{}',				#definitionSource : 'ProtoObject subclass: #LoggingProxy\r\tinstanceVariableNames: \'subject invocationCount\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Reflection-Complete\''			},			#name : #LoggingProxy,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LoggingProxy,						#isMetaSide : false					},					#name : #subject,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LoggingProxy,						#isMetaSide : false					},					#name : #invocationCount,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LoggingProxy class\r\tinstanceVariableNames: \'\''				},				#name : #'LoggingProxy class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LoggingProxy,					#isMetaSide : false				},				#parent : @8,				#content : 'A LoggingProxy is .\r\rInstance Variables\r\tinvocationCount:\t\t<Object>\r\tsubject:\t\t<Object>\r\rinvocationCount\r\t- xxxxx\r\rsubject\r\t- xxxxx\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Reflection-Complete,			#package : #Reflection-Complete,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ],		#time : DateAndTime [ '2019-11-14T08:24:20.195393+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ProtoObject',				#traitCompositionSource : '{}',				#definitionSource : 'ProtoObject subclass: #MinimalObject\r\tinstanceVariableNames: \'subject calls\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #MinimalObject,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MinimalObject,						#isMetaSide : false					},					#name : #subject,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MinimalObject,						#isMetaSide : false					},					#name : #calls,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MinimalObject class\r\tinstanceVariableNames: \'\''				},				#name : #'MinimalObject class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MinimalObject,					#isMetaSide : false				},				#parent : @8,				#content : 'A MinimalObject is .\r\rInstance Variables\r\tcalls:\t\t<Object>\r\tsubject:\t\t<Object>\r\rcalls\r\t- xxxxx\r\rsubject\r\t- xxxxx\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A MinimalObject is .\r\rInstance Variables\r\tcalls:\t\t<Object>\r\tsubject:\t\t<Object>\r\rcalls\r\t- xxxxx\r\rsubject\r\t- xxxxx\r',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ],		#time : DateAndTime [ '2019-11-14T08:24:20.196516+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'ProtoObject',				#traitCompositionSource : '{}',				#definitionSource : 'ProtoObject subclass: #MinimalObject\r\tinstanceVariableNames: \'subject calls\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Reflection-Complete\''			},			#name : #MinimalObject,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MinimalObject,						#isMetaSide : false					},					#name : #subject,					#parent : @8				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MinimalObject,						#isMetaSide : false					},					#name : #calls,					#parent : @8				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MinimalObject class\r\tinstanceVariableNames: \'\''				},				#name : #'MinimalObject class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MinimalObject,					#isMetaSide : false				},				#parent : @8,				#content : 'A MinimalObject is .\r\rInstance Variables\r\tcalls:\t\t<Object>\r\tsubject:\t\t<Object>\r\rcalls\r\t- xxxxx\r\rsubject\r\t- xxxxx\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Reflection-Complete,			#package : #Reflection-Complete,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ],		#time : DateAndTime [ '2019-11-14T08:24:20.236219+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #AnonymousObjectTest,				#isMetaSide : false			},			#name : #testCount,			#protocol : #running,			#sourceCode : 'testCount\r\t"Transcript closeAllViews; open"\r\t| set anonClass |\r\tset := Set new.\r\tself assert: set size = 0.\r\r\tanonClass := Behavior new.\r\tanonClass superclass: Set;\r\t\tsetFormat: Set format;\r\t\tmethodDictionary: MethodDictionary new.\r\t\r\t"anonClass compile: \'class ^ super class superclass\'. doesn\'t work since class is inlined"\r\tanonClass compile: \'add: anObject Transcript show: \'\'adding \'\', anObject printString; cr. ^ super add: anObject\'.\r\t\r\tself assert: set class = Set.\r\tself assert: set size = 0.\r\r\tset add: 1.\r\tself assert: set size = 1.\r\t\r\tset primitiveChangeClassTo: anonClass new.\r\t\r\tself assert: set class ~= Set. \t\t\t\t":-(" \r\tset add: 2.\r\tself assert: set size = 2.\r',			#stamp : 'jjddpp 10/4/2012 15:36',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ],		#time : DateAndTime [ '2019-11-14T08:24:20.239915+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessorsTest,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #running,			#sourceCode : 'tearDown\r\t"DynamicAccessors methodDict removeDangerouslyKey: #x ifAbsent: []"\r\tDynamicAccessors removeSelector: #x.',			#stamp : 'jjddpp 10/22/2014 18:55',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ],		#time : DateAndTime [ '2019-11-14T08:24:20.242263+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessorsTest,				#isMetaSide : false			},			#name : #testAccessors,			#protocol : #running,			#sourceCode : 'testAccessors\r\tself deny: (DynamicAccessors methodDict keys includes: #x).\r\tself assert: DynamicAccessors new x = nil.\r\tself assert: (DynamicAccessors methodDict keys includes: #x).',			#stamp : 'onierstrasz 6/8/2009 15:43',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ],		#time : DateAndTime [ '2019-11-14T08:24:20.244352+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testDelegation,			#protocol : #running,			#sourceCode : 'testDelegation\r\t| point |\r\tpoint := 1@2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: point + (3@4) = (4@6).\r\tself assert: point invocationCount = 1.',			#stamp : 'onierstrasz 6/10/2009 11:28',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ],		#time : DateAndTime [ '2019-11-14T08:24:20.246392+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\tself deny: point invocationCount = 4',			#stamp : 'jjddpp 9/3/2019 08:47',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ],		#time : DateAndTime [ '2019-11-14T08:24:20.248803+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MethodWrapperTest,				#isMetaSide : false			},			#name : #testAnswer42,			#protocol : #'as yet unclassified',			#sourceCode : 'testAnswer42\r\t| demoClass |\r\tObject subclass: #Demo\r\t\tinstanceVariableNames: \'\'\r\t\tclassVariableNames: \'\'\r\t\tpoolDictionaries: \'\'\r\t\tcategory: \'Demo\'.\r\r\tdemoClass := Smalltalk at: #Demo.\r\r\tself should: [demoClass new answer42] raise: MessageNotUnderstood.\r\r\tdemoClass methodDict at: #answer42 put: ObjectsAsMethodsExample new.\r\r\tself assert: demoClass new answer42 = 42.\r\r\tdemoClass removeFromSystem ',			#stamp : 'FirstnameLastname 9/22/2009 16:37',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ],		#time : DateAndTime [ '2019-11-14T08:24:20.250806+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalObjectTest,				#isMetaSide : false			},			#name : #testCallCount,			#protocol : #running,			#sourceCode : 'testCallCount\r\t"Transcript closeAllViews; open"\r\t| set minObject |\r\t"create subject and wrapper"\r\tset := Set new.\t\r\tminObject := MinimalObject new.\r\r\tset add: 0.\r\tself assert: minObject MOcalls = 0.\r\r\t"swap the pointers"\r\tset become: minObject.\r\tset add: 1; add: 2.\r\tself assert: set MOcalls = 2.\r\r\t"swap the pointers"\r\tminObject become: set.\r\tset add: 3.\r\tself assert: minObject MOcalls = 2.\r',			#stamp : 'jjddpp 10/4/2012 15:29',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ],		#time : DateAndTime [ '2019-11-14T08:24:20.252754+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ReflectionTest,				#isMetaSide : false			},			#name : #testBecome,			#protocol : #running,			#sourceCode : 'testBecome\r\t| pt1 pt2 pt3 |\r\tpt1 := 0@0.\r\tpt2 := pt1.\r\tpt3 := 100@100.\r\tpt1 become: pt3.\r\tself assert: pt1 = (100@100).\r\tself assert: pt1 == pt2.\r\tself assert: pt3 = (0@0).',			#stamp : 'on 3/24/2006 16:52',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ],		#time : DateAndTime [ '2019-11-14T08:24:20.254687+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ReflectionTest,				#isMetaSide : false			},			#name : #testBecomeForward,			#protocol : #running,			#sourceCode : 'testBecomeForward\r\t| pt1 pt2 pt3 |\r\tpt1 := 0@0.\r\tpt2 := pt1.\r\tpt3 := 100@100.\r\tpt1 becomeForward: pt3.\r\tself assert: pt1 = (100@100).\r\tself assert: pt1 == pt2.\r\tself assert: pt2 == pt3.\r',			#stamp : 'on 3/24/2006 16:51',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ],		#time : DateAndTime [ '2019-11-14T08:24:20.25703+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ReflectionTest,				#isMetaSide : false			},			#name : #testPrimitiveChangeClassTo,			#protocol : #running,			#sourceCode : 'testPrimitiveChangeClassTo\r\t| behavior model |\r\tbehavior := Behavior new.\r\tbehavior superclass: Model.\r\tbehavior setFormat: Model format.\r\tmodel := Model new.\r\tmodel primitiveChangeClassTo: behavior new.\r\tbehavior compile: \'thisIsATest ^ 2\'.\r\tself assert: model thisIsATest = 2.\r\tself should: [ Model new thisIsATest ] raise: MessageNotUnderstood',			#stamp : 'jjddpp 9/3/2019 08:46',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ],		#time : DateAndTime [ '2019-11-14T08:24:20.292637+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Continuation class',				#isMetaSide : true			},			#name : #'callcc:',			#protocol : #'*Reflection-Complete',			#sourceCode : 'callcc: aBlock\r\t^ self currentDo: aBlock',			#stamp : 'jjddpp 10/23/2014 17:11',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ],		#time : DateAndTime [ '2019-11-14T08:24:20.293824+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'whileTrueCC:',			#protocol : #'*Reflection-Complete',			#sourceCode : 'whileTrueCC: aBlock\r\t"versió de whileTrue: implementada amb callcc:"\r\r\t| cont |\r\tcont := Continuation callcc: [ :cc | cc ].\r\tself value\r\t\tifTrue: [ aBlock value.\r\t\t\t       cont value: cont ]\r\t\tifFalse: [ ^ nil ] ',			#stamp : 'jjddpp 9/3/2019 19:16',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ],		#time : DateAndTime [ '2019-11-14T08:24:20.295337+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessors,				#isMetaSide : false			},			#name : #'doesNotUnderstand:',			#protocol : #error-handling,			#sourceCode : 'doesNotUnderstand: aMessage \r\t| messageName |\r\tmessageName := aMessage selector asString.\r\t(self class instVarNames includes: messageName)\r\t\tifTrue: [self class compile: messageName , String cr , \' ^ \' , messageName.\r\t\t\t^ aMessage sendTo: self].\r\tsuper doesNotUnderstand: aMessage',			#stamp : 'onierstrasz 6/8/2009 15:35',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ],		#time : DateAndTime [ '2019-11-14T08:24:20.296102+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #HaltDemo,				#isMetaSide : false			},			#name : #bar,			#protocol : #'as yet unclassified',			#sourceCode : 'bar\r\t^ (self foo), \'bar\'',			#stamp : 'on 3/28/2006 15:01',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ],		#time : DateAndTime [ '2019-11-14T08:24:20.296812+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #HaltDemo,				#isMetaSide : false			},			#name : #foo,			#protocol : #'as yet unclassified',			#sourceCode : 'foo\r\tself haltIf: #bar.\r\t^ \'foo\'',			#stamp : 'on 3/28/2006 15:01',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ],		#time : DateAndTime [ '2019-11-14T08:24:20.297507+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #HaltDemo,				#isMetaSide : false			},			#name : #'haltIf:',			#protocol : #'as yet unclassified',			#sourceCode : 'haltIf: aSelector\r\t| context |\r\tcontext := thisContext.\r\t[context sender isNil]\r\t\twhileFalse:\r\t\t\t[context := context sender.\r\t\t\t(context selector = aSelector)\r\t\t\tifTrue: [ Halt signal ] ].\r',			#stamp : 'on 3/28/2006 14:59',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ],		#time : DateAndTime [ '2019-11-14T08:24:20.298245+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'LoggingMethodWrapper class',				#isMetaSide : true			},			#name : #example,			#protocol : #examples,			#sourceCode : 'example\r\t| logger |\r\tlogger := LoggingMethodWrapper on: Integer>>#factorial.\r\r\tlogger invocationCount.\r\t5 factorial.\r\tlogger invocationCount.\r\r\tlogger install.\r\t[ 5 factorial ] ensure: [logger uninstall].\r\tlogger invocationCount.\r\r\t10 factorial.\r\tlogger invocationCount. \t',			#stamp : 'jjddpp 10/18/2012 12:01',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ],		#time : DateAndTime [ '2019-11-14T08:24:20.298961+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'LoggingMethodWrapper class',				#isMetaSide : true			},			#name : #'on:',			#protocol : #'instance creation',			#sourceCode : 'on: aCompiledMethod\r\t^ self new initializeOn: aCompiledMethod',			#stamp : 'jjddpp 10/8/2012 11:22',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ],		#time : DateAndTime [ '2019-11-14T08:24:20.299651+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingMethodWrapper,				#isMetaSide : false			},			#name : #flushCache,			#protocol : #auxiliary,			#sourceCode : 'flushCache',			#stamp : 'jjddpp 10/8/2012 11:23',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ],		#time : DateAndTime [ '2019-11-14T08:24:20.300334+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingMethodWrapper,				#isMetaSide : false			},			#name : #'initializeOn:',			#protocol : #initialize-release,			#sourceCode : 'initializeOn: aCompiledMethod\r\tmethod := aCompiledMethod.\r\treference := aCompiledMethod methodReference.\r\tinvocationCount := 0',			#stamp : 'jjddpp 10/8/2012 11:22',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ],		#time : DateAndTime [ '2019-11-14T08:24:20.301019+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingMethodWrapper,				#isMetaSide : false			},			#name : #install,			#protocol : #running,			#sourceCode : 'install\r\treference actualClass methodDictionary\r\t\tat: reference selector\r\t\tput: self',			#stamp : 'jjddpp 9/4/2019 14:51',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ],		#time : DateAndTime [ '2019-11-14T08:24:20.302366+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingMethodWrapper,				#isMetaSide : false			},			#name : #invocationCount,			#protocol : #accessing,			#sourceCode : 'invocationCount\r\t^ invocationCount',			#stamp : 'jjddpp 10/8/2012 11:25',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ],		#time : DateAndTime [ '2019-11-14T08:24:20.303039+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingMethodWrapper,				#isMetaSide : false			},			#name : #'invocationCount:',			#protocol : #accessing,			#sourceCode : 'invocationCount: anObject\r\tinvocationCount := anObject',			#stamp : 'jjddpp 10/8/2012 11:25',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ],		#time : DateAndTime [ '2019-11-14T08:24:20.303687+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingMethodWrapper,				#isMetaSide : false			},			#name : #method,			#protocol : #accessing,			#sourceCode : 'method\r\t^ method',			#stamp : 'jjddpp 10/8/2012 11:25',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ],		#time : DateAndTime [ '2019-11-14T08:24:20.304414+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingMethodWrapper,				#isMetaSide : false			},			#name : #'method:',			#protocol : #accessing,			#sourceCode : 'method: anObject\r\tmethod := anObject',			#stamp : 'jjddpp 10/8/2012 11:25',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ],		#time : DateAndTime [ '2019-11-14T08:24:20.305057+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingMethodWrapper,				#isMetaSide : false			},			#name : #'methodClass:',			#protocol : #auxiliary,			#sourceCode : 'methodClass: aMethodClass',			#stamp : 'jjddpp 10/8/2012 11:24',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ],		#time : DateAndTime [ '2019-11-14T08:24:20.305708+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingMethodWrapper,				#isMetaSide : false			},			#name : #reference,			#protocol : #accessing,			#sourceCode : 'reference\r\t^ reference',			#stamp : 'jjddpp 10/8/2012 11:25',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ],		#time : DateAndTime [ '2019-11-14T08:24:20.306354+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingMethodWrapper,				#isMetaSide : false			},			#name : #'reference:',			#protocol : #accessing,			#sourceCode : 'reference: anObject\r\treference := anObject',			#stamp : 'jjddpp 10/8/2012 11:25',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ],		#time : DateAndTime [ '2019-11-14T08:24:20.307019+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingMethodWrapper,				#isMetaSide : false			},			#name : #'run:with:in:',			#protocol : #running,			#sourceCode : 'run: aSelector with: anArray in: aReceiver\r\tinvocationCount := invocationCount + 1.\r\t^ aReceiver withArgs: anArray executeMethod: method',			#stamp : 'jjddpp 10/22/2014 19:31',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ],		#time : DateAndTime [ '2019-11-14T08:24:20.307655+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingMethodWrapper,				#isMetaSide : false			},			#name : #'selector:',			#protocol : #auxiliary,			#sourceCode : 'selector: aSymbol',			#stamp : 'jjddpp 10/8/2012 11:24',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ],		#time : DateAndTime [ '2019-11-14T08:24:20.308302+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingMethodWrapper,				#isMetaSide : false			},			#name : #uninstall,			#protocol : #running,			#sourceCode : 'uninstall\r\treference actualClass methodDictionary\r\t\tat: reference selector\r\t\tput: method ',			#stamp : 'jjddpp 9/4/2019 14:51',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ],		#time : DateAndTime [ '2019-11-14T08:24:20.309682+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxy,				#isMetaSide : false			},			#name : #'doesNotUnderstand:',			#protocol : #error-handling,			#sourceCode : 'doesNotUnderstand: aMessage \r\tTranscript show: \'performing \', aMessage printString; cr.\r\tinvocationCount := invocationCount + 1.\r\t^ aMessage sendTo: subject\r',			#stamp : 'onierstrasz 6/10/2009 11:30',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ],		#time : DateAndTime [ '2019-11-14T08:24:20.310345+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxy,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tinvocationCount := 0.\r\tsubject := self.',			#stamp : 'onierstrasz 6/10/2009 11:29',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ],		#time : DateAndTime [ '2019-11-14T08:24:20.311019+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxy,				#isMetaSide : false			},			#name : #invocationCount,			#protocol : #accessing,			#sourceCode : 'invocationCount\r\t^ invocationCount',			#stamp : 'onierstrasz 6/10/2009 11:28',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ],		#time : DateAndTime [ '2019-11-14T08:24:20.311698+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MinimalObject class',				#isMetaSide : true			},			#name : #demo,			#protocol : #'as yet unclassified',			#sourceCode : 'demo\r\t"Transcript closeAllViews; open.\r\tMinimalObject demo"\r\t| set minObject |\r\t"create subject and wrapper"\r\tset := Set new.\t\r\tminObject := MinimalObject new.\r\r\tset add: 0.\r\r\t"swap the pointers"\r\tset become: minObject.\r\tset add: 1; add: 2.\r\r\t"swap the pointers"\r\tminObject become: set.\r\tset add: 3.\r\tset inspect.\r',			#stamp : 'on 3/30/2006 15:39',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ],		#time : DateAndTime [ '2019-11-14T08:24:20.312339+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalObject,				#isMetaSide : false			},			#name : #MOcalls,			#protocol : #'as yet unclassified',			#sourceCode : 'MOcalls\r\t"Choose an uncommon method name"\r\t^ calls',			#stamp : 'on 4/3/2006 15:18',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ],		#time : DateAndTime [ '2019-11-14T08:24:20.313056+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalObject,				#isMetaSide : false			},			#name : #'doesNotUnderstand:',			#protocol : #'as yet unclassified',			#sourceCode : 'doesNotUnderstand: aMessage\r\tTranscript show: \'performing \', aMessage printString; cr.\r\tcalls := calls + 1.\r\t^ subject perform: aMessage selector withArguments: aMessage arguments',			#stamp : 'on 4/3/2006 13:57',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ],		#time : DateAndTime [ '2019-11-14T08:24:20.313745+01:00' ],		#trigger : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MinimalObject,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\r\t"When we become: anotherObject, this reference will also get swapped"\r\tsubject := self.\r\tcalls := 0.',			#stamp : 'jjddpp 10/4/2012 15:29',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-11-14T08:24:36.750219+01:00' ],		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ]	},	#content : EpCategoryAddition {		#classCategoryName : #Demo,		#affectedPackageName : #Demo	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-11-14T08:24:36.807566+01:00' ],		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Demo\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Demo\''			},			#name : #Demo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Demo class\r\tinstanceVariableNames: \'\''				},				#name : #'Demo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Demo,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Demo,			#package : #Demo,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-11-14T08:24:36.825363+01:00' ],		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Demo\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #Demo'			},			#name : #Demo,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Demo class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteDemo class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteDemo,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Demo,			#package : #Demo,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-11-14T08:24:42.626908+01:00' ],		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessors,				#isMetaSide : false			},			#name : #x,			#protocol : #'as yet unclassified',			#sourceCode : 'x\r ^ x',			#stamp : 'jjddpp 11/14/2019 08:24',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-11-14T08:24:42.682398+01:00' ],		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessors,				#isMetaSide : false			},			#name : #x,			#protocol : #'as yet unclassified',			#sourceCode : 'x\r ^ x',			#stamp : 'jjddpp 11/14/2019 08:24',			#package : #Reflection-Complete		}	}}