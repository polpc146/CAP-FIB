OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T08:35:33.883171+02:00' ],		#prior : OmReference [ 'Pharo.5ksgqfomqmnlrgpfl6u59v9qj', '75' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxy,				#isMetaSide : false			},			#name : #'doesNotUnderstand:',			#protocol : #error-handling,			#sourceCode : 'doesNotUnderstand: aMessage \r\tTranscript show: \'performing \', aMessage printString; cr.\r\tinvocationCount := invocationCount + 1.\r\t^ aMessage sendTo: subject\r',			#stamp : 'onierstrasz 6/10/2009 11:30',			#package : #Reflection-Complete		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxy,				#isMetaSide : false			},			#name : #'doesNotUnderstand:',			#protocol : #error-handling,			#sourceCode : 'doesNotUnderstand: aMessage \r\t(\'performing \', aMessage printString) traceCr.\r\tinvocationCount := invocationCount + 1.\r\t^ aMessage sendTo: subject\r',			#stamp : 'jjddpp 10/24/2019 08:35',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T08:46:00.7491+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\tself deny: point invocationCount = 4',			#stamp : 'jjddpp 9/3/2019 08:47',			#package : #Reflection-Complete		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\tself deny: point invocationCount = 4.\r\tself assert: point invocationCount = 5',			#stamp : 'jjddpp 10/24/2019 08:46',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T08:47:30.892907+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\tself deny: point invocationCount = 4.\r\tself assert: point invocationCount = 5',			#stamp : 'jjddpp 10/24/2019 08:46',			#package : #Reflection-Complete		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\tself deny: point invocationCount = 4.\r\tself assert: point invocationCount = 4',			#stamp : 'jjddpp 10/24/2019 08:47',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T08:48:03.656387+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\tself deny: point invocationCount = 4.\r\tself assert: point invocationCount = 4',			#stamp : 'jjddpp 10/24/2019 08:47',			#package : #Reflection-Complete		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\tself deny: point invocationCount = 4.\r\tself assert: point invocationCount = 3',			#stamp : 'jjddpp 10/24/2019 08:48',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T08:49:15.2372+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\tself deny: point invocationCount = 4.\r\tself assert: point invocationCount = 3',			#stamp : 'jjddpp 10/24/2019 08:48',			#package : #Reflection-Complete		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\t"self deny: point invocationCount = 4."\r\t"self assert: point invocationCount = 3"\r\tpoint inspect. Halt halt.',			#stamp : 'jjddpp 10/24/2019 08:49',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T08:50:49.694286+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\t"self deny: point invocationCount = 4."\r\t"self assert: point invocationCount = 3"\r\tpoint inspect. Halt halt.',			#stamp : 'jjddpp 10/24/2019 08:49',			#package : #Reflection-Complete		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\tself deny: point invocationCount = 4.\r\t"self assert: point invocationCount = 3"\r\t',			#stamp : 'jjddpp 10/24/2019 08:50',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T08:51:10.119521+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\tself deny: point invocationCount = 4.\r\t"self assert: point invocationCount = 3"\r\t',			#stamp : 'jjddpp 10/24/2019 08:50',			#package : #Reflection-Complete		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\tself deny: point invocationCount = 4.\r\tself assert: point invocationCount = 1\r\t',			#stamp : 'jjddpp 10/24/2019 08:51',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T08:55:36.644668+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\tself deny: point invocationCount = 4.\r\tself assert: point invocationCount = 1\r\t',			#stamp : 'jjddpp 10/24/2019 08:51',			#package : #Reflection-Complete		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\tself deny: point invocationCount = 4.\r\tself assert: point invocationCount = 3\r\t',			#stamp : 'jjddpp 10/24/2019 08:55',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T08:57:03.928558+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\tself deny: point invocationCount = 4.\r\tself assert: point invocationCount = 3\r\t',			#stamp : 'jjddpp 10/24/2019 08:55',			#package : #Reflection-Complete		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoggingProxyTest,				#isMetaSide : false			},			#name : #testSelf,			#protocol : #running,			#sourceCode : 'testSelf\r\t| point |\r\tpoint := 1 @ 2.\r\tLoggingProxy new become: point.\r\tself assert: point invocationCount = 0.\r\tself assert: (point rectangle: 3 @ 4) area = 4.\r\t"rectangle: does two self-sends"\r\t"oops -- self sends are not intercepted"\r\tself deny: point invocationCount = 4.\r\tself assert: point invocationCount = 1\r\t',			#stamp : 'jjddpp 10/24/2019 08:57',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T08:59:37.206105+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessors,				#isMetaSide : false			},			#name : #'doesNotUnderstand:',			#protocol : #error-handling,			#sourceCode : 'doesNotUnderstand: aMessage \r\t| messageName |\r\tmessageName := aMessage selector asString.\r\t(self class instVarNames includes: messageName)\r\t\tifTrue: [self class compile: messageName , String cr , \' ^ \' , messageName.\r\t\t\t^ aMessage sendTo: self].\r\tsuper doesNotUnderstand: aMessage',			#stamp : 'onierstrasz 6/8/2009 15:35',			#package : #Reflection-Complete		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessors,				#isMetaSide : false			},			#name : #'doesNotUnderstand:',			#protocol : #error-handling,			#sourceCode : 'doesNotUnderstand: aMessage \r\t| messageName |\r\tmessageName := aMessage selector asString.\r\t(self class instVarNames includes: messageName)\r\t\tifTrue: [self class compile: messageName , String cr , \' ^ \' , messageName.\r\t\t\t^ aMessage sendTo: self].\r\tsuper doesNotUnderstand: aMessage\r\t\r',			#stamp : 'jjddpp 10/24/2019 08:59',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T09:06:28.178292+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #DynamicAccessors\r\tinstanceVariableNames: \'x y\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Reflection-Complete\''			},			#name : #DynamicAccessors,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DynamicAccessors,						#isMetaSide : false					},					#name : #x,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #DynamicAccessors,						#isMetaSide : false					},					#name : #y,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'DynamicAccessors class\r\tinstanceVariableNames: \'\''				},				#name : #'DynamicAccessors class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #DynamicAccessors,					#isMetaSide : false				},				#parent : @7,				#content : 'A DynamicAccessors is .\r\rInstance Variables\r\tx:\t\t<Object>\r\rx\r\t- xxxxx\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Reflection-Complete,			#package : #Reflection-Complete,			#sharedPools : OrderedCollection [ ]		},		#protocol : #intialization	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T09:06:49.693087+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessors,				#isMetaSide : false			},			#name : #initialize,			#protocol : #intialization,			#sourceCode : 'initialize\r\tx := 1000.\r\ty := 1001.',			#stamp : 'jjddpp 10/24/2019 09:06',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T09:07:40.911788+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessorsTest,				#isMetaSide : false			},			#name : #testAccessors,			#protocol : #running,			#sourceCode : 'testAccessors\r\tself deny: (DynamicAccessors methodDict keys includes: #x).\r\tself assert: DynamicAccessors new x = nil.\r\tself assert: (DynamicAccessors methodDict keys includes: #x).',			#stamp : 'onierstrasz 6/8/2009 15:43',			#package : #Reflection-Complete		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessorsTest,				#isMetaSide : false			},			#name : #testAccessors,			#protocol : #running,			#sourceCode : 'testAccessors\r\tself deny: (DynamicAccessors methodDict keys includes: #x).\r\tself assert: DynamicAccessors new x = 1000.\r\tself assert: (DynamicAccessors methodDict keys includes: #x).',			#stamp : 'jjddpp 10/24/2019 09:07',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T09:07:43.022695+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessors,				#isMetaSide : false			},			#name : #x,			#protocol : #'as yet unclassified',			#sourceCode : 'x\r ^ x',			#stamp : 'jjddpp 10/24/2019 09:07',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T09:07:43.023895+02:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessors,				#isMetaSide : false			},			#name : #x,			#protocol : #'as yet unclassified',			#sourceCode : 'x\r ^ x',			#stamp : 'jjddpp 10/24/2019 09:07',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T09:08:04.294807+02:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessorsTest,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #running,			#sourceCode : 'tearDown\r\t"DynamicAccessors methodDict removeDangerouslyKey: #x ifAbsent: []"\r\tDynamicAccessors removeSelector: #x.',			#stamp : 'jjddpp 10/22/2014 18:55',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T09:08:10.381003+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessorsTest,				#isMetaSide : false			},			#name : #testAccessors,			#protocol : #running,			#sourceCode : 'testAccessors\r\tself deny: (DynamicAccessors methodDict keys includes: #x).\r\tself assert: DynamicAccessors new x = 1000.\r\tself assert: (DynamicAccessors methodDict keys includes: #x).',			#stamp : 'jjddpp 10/24/2019 09:07',			#package : #Reflection-Complete		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessorsTest,				#isMetaSide : false			},			#name : #testAccessors,			#protocol : #running,			#sourceCode : 'testAccessors\r\tself deny: (DynamicAccessors methodDict keys includes: #x).\r\tself assert: DynamicAccessors new x = 1000.\r\tself assert: (DynamicAccessors methodDict keys includes: #x).\r\t',			#stamp : 'jjddpp 10/24/2019 09:08',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T09:08:16.886593+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessors,				#isMetaSide : false			},			#name : #x,			#protocol : #'as yet unclassified',			#sourceCode : 'x\r ^ x',			#stamp : 'jjddpp 10/24/2019 09:08',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T09:08:46.216986+02:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessors,				#isMetaSide : false			},			#name : #x,			#protocol : #'as yet unclassified',			#sourceCode : 'x\r ^ x',			#stamp : 'jjddpp 10/24/2019 09:08',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T09:08:57.429396+02:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessorsTest,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #'as yet unclassified',			#sourceCode : 'tearDown\r\t"DynamicAccessors methodDict removeDangerouslyKey: #x ifAbsent: []"\r\tDynamicAccessors removeSelector: #x.',			#stamp : 'jjddpp 10/24/2019 09:08',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T09:08:57.499156+02:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessorsTest,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #'as yet unclassified',			#sourceCode : 'tearDown\r\t"DynamicAccessors methodDict removeDangerouslyKey: #x ifAbsent: []"\r\tDynamicAccessors removeSelector: #x.',			#stamp : 'jjddpp 10/24/2019 09:08',			#package : #Reflection-Complete		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessorsTest,				#isMetaSide : false			},			#name : #tearDown,			#protocol : #running,			#sourceCode : 'tearDown\r\t"DynamicAccessors methodDict removeDangerouslyKey: #x ifAbsent: []"\r\tDynamicAccessors removeSelector: #x.',			#stamp : 'jjddpp 10/24/2019 09:08',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T09:09:04.843304+02:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessors,				#isMetaSide : false			},			#name : #x,			#protocol : #'as yet unclassified',			#sourceCode : 'x\r ^ x',			#stamp : 'jjddpp 10/24/2019 09:09',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T09:09:04.844652+02:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #DynamicAccessors,				#isMetaSide : false			},			#name : #x,			#protocol : #'as yet unclassified',			#sourceCode : 'x\r ^ x',			#stamp : 'jjddpp 10/24/2019 09:09',			#package : #Reflection-Complete		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-10-24T09:27:18.980293+02:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #AnonymousObjectTest,				#isMetaSide : false			},			#name : #testCount,			#protocol : #running,			#sourceCode : 'testCount\r\t"Transcript closeAllViews; open"\r\t| set anonClass |\r\tset := Set new.\r\tself assert: set size = 0.\r\r\tanonClass := Behavior new.\r\tanonClass superclass: Set;\r\t\tsetFormat: Set format;\r\t\tmethodDictionary: MethodDictionary new.\r\t\r\t"anonClass compile: \'class ^ super class superclass\'. doesn\'t work since class is inlined"\r\tanonClass compile: \'add: anObject Transcript show: \'\'adding \'\', anObject printString; cr. ^ super add: anObject\'.\r\t\r\tself assert: set class = Set.\r\tself assert: set size = 0.\r\r\tset add: 1.\r\tself assert: set size = 1.\r\t\r\tset primitiveChangeClassTo: anonClass new.\r\t\r\tself assert: set class ~= Set. \t\t\t\t":-(" \r\tset add: 2.\r\tself assert: set size = 2.\r',			#stamp : 'jjddpp 10/4/2012 15:36',			#package : #Reflection-Complete		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #AnonymousObjectTest,				#isMetaSide : false			},			#name : #testCount,			#protocol : #running,			#sourceCode : 'testCount\r\t"Transcript closeAllViews; open"\r\t| set anonClass |\r\tset := Set new.\r\tself assert: set size = 0.\r\r\tanonClass := Behavior new.\r\tanonClass superclass: Set;\r\t\tsetFormat: Set format;\r\t\tmethodDictionary: MethodDictionary new.\r\t\r\t"anonClass compile: \'class ^ super class superclass\'. doesn\'t work since class is inlined"\r\tanonClass compile: \'add: anObject Transcript show: \'\'adding \'\', anObject printString; cr. ^ super add: anObject\'.\r\t\r\tself assert: set class = Set.\r\tself assert: set size = 0.\r\r\tset add: 1.\r\tself assert: set size = 1.\r\t\r\tset primitiveChangeClassTo: anonClass new.\r\t\r\tself deny: set class = Set. \t\t\t\t":-(" \r\tset add: 2.\r\tself assert: set size = 2.\r',			#stamp : 'jjddpp 10/24/2019 09:27',			#package : #Reflection-Complete		}	}}