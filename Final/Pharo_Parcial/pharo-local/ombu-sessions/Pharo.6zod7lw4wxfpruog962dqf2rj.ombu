OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.92399+01:00' ],		#prior : OmReference [ 'Pharo.13pw5lcp9fzipfko0patipem4', '10' ],		#self : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #Examples-SnakesAndLadders,		#affectedPackageName : #Examples-SnakesAndLadders	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.925529+01:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #SnakesAndLadders\r\tinstanceVariableNames: \'players squares turn die over\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #SnakesAndLadders,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLadders,						#isMetaSide : false					},					#name : #players,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLadders,						#isMetaSide : false					},					#name : #squares,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLadders,						#isMetaSide : false					},					#name : #turn,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLadders,						#isMetaSide : false					},					#name : #die,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLadders,						#isMetaSide : false					},					#name : #over,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakesAndLadders class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakesAndLadders class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakesAndLadders,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.92899+01:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #SnakesAndLadders\r\tinstanceVariableNames: \'players squares turn die over\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #SnakesAndLadders,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLadders,						#isMetaSide : false					},					#name : #players,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLadders,						#isMetaSide : false					},					#name : #squares,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLadders,						#isMetaSide : false					},					#name : #turn,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLadders,						#isMetaSide : false					},					#name : #die,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLadders,						#isMetaSide : false					},					#name : #over,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakesAndLadders class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakesAndLadders class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakesAndLadders,					#isMetaSide : false				},				#parent : @7,				#content : 'SnakesAndLadders example playToEnd\r\rA simple board game in which players roll a die to move from the starting square to the end. A square may contain a snake (moves you back) or a ladder (moves you up). If youland on a square already occupied, you go back to the start. If you move past the end, you reverse direction the remaining number of moves.\r\rSee http://en.wikipedia.org/wiki/Snakes_and_ladders for the rules of the game\r\rSnakesAndLadders has the following responsibilities:\r- enable scripting of an initial configuration of squares and players\r- keep track of the rules of the game\r- keep track whose turn it is to play\r- initiate a move\r- play a game to the end\r- report on moves and intermediate game states\r- stop when the game is over\r\rTypical usage (see the example):\r- Instantiate a new SnakesAndLadders\r- Add squares, snakes and ladders to build the game board \r- Join players\r- Play single moves or PlayToEnd',				#stamp : 'on 3/14/2006 19:05'			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'SnakesAndLadders example playToEnd\r\rA simple board game in which players roll a die to move from the starting square to the end. A square may contain a snake (moves you back) or a ladder (moves you up). If youland on a square already occupied, you go back to the start. If you move past the end, you reverse direction the remaining number of moves.\r\rSee http://en.wikipedia.org/wiki/Snakes_and_ladders for the rules of the game\r\rSnakesAndLadders has the following responsibilities:\r- enable scripting of an initial configuration of squares and players\r- keep track of the rules of the game\r- keep track whose turn it is to play\r- initiate a move\r- play a game to the end\r- report on moves and intermediate game states\r- stop when the game is over\r\rTypical usage (see the example):\r- Instantiate a new SnakesAndLadders\r- Add squares, snakes and ladders to build the game board \r- Join players\r- Play single moves or PlayToEnd',		#newStamp : 'on 3/14/2006 19:05'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.932254+01:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #'add:',			#protocol : #initialize-release,			#sourceCode : 'add: aSquare \r\tsquares add: aSquare.\r\taSquare setPosition: squares size board: self',			#stamp : 'on 3/18/2006 15:13',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.934335+01:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\tdie := Die new.\r\tsquares := OrderedCollection new.\r\tplayers := OrderedCollection new.\r\tturn := 1.\r\tover := false.',			#stamp : 'on 3/20/2006 10:16',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.936507+01:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #invariant,			#protocol : #initialize-release,			#sourceCode : 'invariant\r\t"Should also check that snakes and ladders lead to ordinary squares, and do not bounce\r\tpast the beginning or end of the board."\r\t^ squares size > 1\r\t\tand: [players size > 1\r\t\tand: [turn >= 1\r\t\tand: [turn <= players size]]]',			#stamp : 'jjddpp 9/4/2012 12:23',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.938677+01:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #'join:',			#protocol : #initialize-release,			#sourceCode : 'join: aPlayer\r\tplayers add: aPlayer.\r\taPlayer moveTo: self firstSquare.\r',			#stamp : 'on 3/18/2006 12:10',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.940812+01:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #reset,			#protocol : #initialize-release,			#sourceCode : 'reset\r\tdie := Die new.\r\tturn := 1.\r\tover := false.\r\tplayers do: [:each | each moveTo: self firstSquare ].\r\tself assert: self invariant.',			#stamp : 'on 3/16/2006 11:30',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.942356+01:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #'at:',			#protocol : #testing,			#sourceCode : 'at: position\r\t^ squares at: position',			#stamp : 'on 3/14/2006 16:30',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.943669+01:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #currentPlayer,			#protocol : #testing,			#sourceCode : 'currentPlayer\r\t^ players at: turn',			#stamp : 'on 3/14/2006 16:54',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.944928+01:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #firstSquare,			#protocol : #testing,			#sourceCode : 'firstSquare\r\t^ squares first',			#stamp : 'on 3/14/2006 16:43',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.946186+01:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #isNotOver,			#protocol : #testing,			#sourceCode : 'isNotOver\r\t^ self isOver not',			#stamp : 'on 3/18/2006 15:04',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.948491+01:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #isOver,			#protocol : #testing,			#sourceCode : 'isOver\r\t^ over',			#stamp : 'on 3/18/2006 15:04',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.949785+01:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #lastPosition,			#protocol : #testing,			#sourceCode : 'lastPosition\r\t^ squares size',			#stamp : 'on 3/14/2006 16:59',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.951103+01:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #turn,			#protocol : #testing,			#sourceCode : 'turn\r\t^ turn',			#stamp : 'on 3/14/2006 16:22',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.952739+01:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #checkResult,			#protocol : #playing,			#sourceCode : 'checkResult\r\t^ self currentPlayer position = self lastPosition\r\t\tifTrue: [\r\t\t\tover := true.\r\t\t\t\' -- \', self currentPlayer asString, \' wins!\'\r\t\t\t]\r\t\tifFalse: [ \'\' ]',			#stamp : 'on 3/14/2006 17:10',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.954582+01:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #playOneMove,			#protocol : #playing,			#sourceCode : 'playOneMove\r\t| result |\r\tself assert: self invariant.\r\t^ self isOver \r\t\tifTrue: [\'The game is over!\']\r\t\tifFalse: \r\t\t\t[result := (self currentPlayer moveWith: die) , self checkResult.\r\t\t\tself upDateTurn.\r\t\t\tresult]',			#stamp : 'on 5/17/2006 16:49',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.95756+01:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #playToEnd,			#protocol : #playing,			#sourceCode : 'playToEnd\r\t"SnakesAndLadders example playToEnd"\r\tTranscript open.\r\tTranscript\r\t\tshow: self asString;\r\t\tcr;\r\t\tcr.\r\t[self isNotOver] whileTrue: \r\t\t\t[Transcript\r\t\t\t\tshow: self playOneMove asString;\r\t\t\t\tcr.\r\t\t\tTranscript\r\t\t\t\tshow: self asString;\r\t\t\t\tcr;\r\t\t\t\tcr]',			#stamp : 'jjddpp 9/9/2012 19:21',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.95924+01:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #upDateTurn,			#protocol : #playing,			#sourceCode : 'upDateTurn\r\tturn := 1 + (turn\\\\players size).',			#stamp : 'on 3/14/2006 16:21',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.960794+01:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #players,			#protocol : #accessors,			#sourceCode : 'players\r\t"needed for testing"\r\t^ players',			#stamp : 'on 3/15/2006 15:01',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.962434+01:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #'setDie:',			#protocol : #accessors,			#sourceCode : 'setDie: aDie\r\t"For testing only. Can play the game with a loaded die."\r\tdie := aDie.',			#stamp : 'on 3/15/2006 13:29',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.965466+01:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLadders,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\tsquares do: [:each | each printOn: aStream].',			#stamp : 'jjddpp 9/4/2012 11:57',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.969915+01:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'SnakesAndLadders class',				#isMetaSide : true			},			#name : #example,			#protocol : #documentation,			#sourceCode : 'example\r\t"self example playToEnd"\r\r\t^ (self new)\r\t\tadd: FirstSquare new;\r\t\tadd: (LadderSquare forward: 4);\r\t\tadd: BoardSquare new;\r\t\tadd: BoardSquare new;\r\t\tadd: BoardSquare new;\r\t\tadd: BoardSquare new;\r\t\tadd: (LadderSquare forward: 2);\r\t\tadd: BoardSquare new;\r\t\tadd: BoardSquare new;\r\t\tadd: BoardSquare new;\r\t\tadd: (SnakeSquare back: 6);\r\t\tadd: BoardSquare new;\r\t\tjoin: (GamePlayer named: \'Jack\');\r\t\tjoin: (GamePlayer named: \'Jill\');\r\t\tyourself',			#stamp : 'on 10/28/2007 13:51',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.972087+01:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'SnakesAndLadders class',				#isMetaSide : true			},			#name : #example2,			#protocol : #documentation,			#sourceCode : 'example2\r\t"self example2 playToEnd"\r\r\t^ (self new)\r\t\tadd: FirstSquare new;\r\t\tadd: BoardSquare new;\r\t\tadd: (LadderSquare forward: 4);\r\t\tadd: BoardSquare new;\r\t\tadd: BoardSquare new;\r\t\tadd: (SnakeSquare back: 2);\r\t\tadd: BoardSquare new;\r\t\tadd: (LadderSquare forward: 3);\r\t\tadd: BoardSquare new;\r\t\tadd: BoardSquare new;\r\t\tadd: (SnakeSquare back: 4);\r\t\tadd: BoardSquare new;\r\t\tadd: BoardSquare new;\r\t\tjoin: (GamePlayer named: \'Jack\');\r\t\tjoin: (GamePlayer named: \'Jill\');\r\t\tyourself',			#stamp : 'on 10/28/2007 13:51',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.975045+01:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Die\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #Die,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Die class\r\tinstanceVariableNames: \'\''				},				#name : #'Die class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Die,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.976928+01:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Die\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #Die,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Die class\r\tinstanceVariableNames: \'\''				},				#name : #'Die class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Die,					#isMetaSide : false				},				#parent : @7,				#content : 'Responsibilities:\r- Yields a random number from 1 to 6 ;-)',				#stamp : 'on 3/14/2006 19:06'			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Responsibilities:\r- Yields a random number from 1 to 6 ;-)',		#newStamp : 'on 3/14/2006 19:06'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.978319+01:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Die,				#isMetaSide : false			},			#name : #roll,			#protocol : #playing,			#sourceCode : 'roll\r\t^ (1 to: 6) atRandom',			#stamp : 'on 3/14/2006 15:41',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.980951+01:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #GamePlayer\r\tinstanceVariableNames: \'name square\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #GamePlayer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #GamePlayer,						#isMetaSide : false					},					#name : #name,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #GamePlayer,						#isMetaSide : false					},					#name : #square,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'GamePlayer class\r\tinstanceVariableNames: \'\''				},				#name : #'GamePlayer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #GamePlayer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.981695+01:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #GamePlayer\r\tinstanceVariableNames: \'name square\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #GamePlayer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #GamePlayer,						#isMetaSide : false					},					#name : #name,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #GamePlayer,						#isMetaSide : false					},					#name : #square,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'GamePlayer class\r\tinstanceVariableNames: \'\''				},				#name : #'GamePlayer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #GamePlayer,					#isMetaSide : false				},				#parent : @7,				#content : 'Responsibilities:\r- Keep track of the square you are on\r- Roll the die\r- Attempt to move the resulting number of squares',				#stamp : 'on 3/14/2006 19:07'			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Responsibilities:\r- Keep track of the square you are on\r- Roll the die\r- Attempt to move the resulting number of squares',		#newStamp : 'on 3/14/2006 19:07'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.983102+01:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GamePlayer,				#isMetaSide : false			},			#name : #invariant,			#protocol : #initialize-release,			#sourceCode : 'invariant\r\t^ square notNil\r\t\tand: [ name notNil ]',			#stamp : 'on 3/18/2006 12:08',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.984534+01:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GamePlayer,				#isMetaSide : false			},			#name : #'setName:',			#protocol : #initialize-release,			#sourceCode : 'setName: aName\r\tname := aName.',			#stamp : 'on 3/18/2006 12:49',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.985981+01:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GamePlayer,				#isMetaSide : false			},			#name : #leaveCurrentSquare,			#protocol : #private,			#sourceCode : 'leaveCurrentSquare\r\tsquare notNil ifTrue: [ square remove: self ].',			#stamp : 'on 3/14/2006 15:53',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.988488+01:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GamePlayer,				#isMetaSide : false			},			#name : #'moveTo:',			#protocol : #playing,			#sourceCode : 'moveTo: aSquare\r\tself leaveCurrentSquare.\r\tsquare := aSquare landHere: self.\r',			#stamp : 'on 3/18/2006 15:21',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.990376+01:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GamePlayer,				#isMetaSide : false			},			#name : #'moveWith:',			#protocol : #playing,			#sourceCode : 'moveWith: aDie\r\t| roll destination |\r\tself assert: self invariant.\r\troll := aDie roll.\r\tdestination := square forwardBy: roll.\r\tself moveTo: destination.\r\t^ name, \' rolls \', roll asString, \' and lands at \', square asString',			#stamp : 'on 3/23/2006 09:04',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.992035+01:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GamePlayer,				#isMetaSide : false			},			#name : #name,			#protocol : #testing,			#sourceCode : 'name\r\t^ name',			#stamp : 'on 3/15/2006 14:57',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.993648+01:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GamePlayer,				#isMetaSide : false			},			#name : #position,			#protocol : #testing,			#sourceCode : 'position\r\t^ square position',			#stamp : 'on 3/14/2006 17:03',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.995374+01:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #GamePlayer,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\taStream nextPutAll: name',			#stamp : 'on 3/14/2006 15:32',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:00.999699+01:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'GamePlayer class',				#isMetaSide : true			},			#name : #'named:',			#protocol : #'instance creation',			#sourceCode : 'named: aName\r\t^ self new setName: aName',			#stamp : 'on 3/18/2006 12:48',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.002187+01:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #BoardSquare\r\tinstanceVariableNames: \'position player board\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #BoardSquare,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #BoardSquare,						#isMetaSide : false					},					#name : #position,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #BoardSquare,						#isMetaSide : false					},					#name : #player,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #BoardSquare,						#isMetaSide : false					},					#name : #board,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'BoardSquare class\r\tinstanceVariableNames: \'\''				},				#name : #'BoardSquare class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #BoardSquare,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.002979+01:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #BoardSquare\r\tinstanceVariableNames: \'position player board\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #BoardSquare,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #BoardSquare,						#isMetaSide : false					},					#name : #position,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #BoardSquare,						#isMetaSide : false					},					#name : #player,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #BoardSquare,						#isMetaSide : false					},					#name : #board,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'BoardSquare class\r\tinstanceVariableNames: \'\''				},				#name : #'BoardSquare class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #BoardSquare,					#isMetaSide : false				},				#parent : @7,				#content : 'Responsibilities:\r- Remember position in the board\r- Keep track of any players on this square\r- Send on any players passing through\r- Displays itself with its position and any player who might be on it, e.g., [7 Jack]',				#stamp : 'on 3/14/2006 19:27'			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Responsibilities:\r- Remember position in the board\r- Keep track of any players on this square\r- Send on any players passing through\r- Displays itself with its position and any player who might be on it, e.g., [7 Jack]',		#newStamp : 'on 3/14/2006 19:27'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.004946+01:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BoardSquare,				#isMetaSide : false			},			#name : #'backwardBy:',			#protocol : #playing,			#sourceCode : 'backwardBy: squares \r\t^ squares = 0 \r\t\tifTrue: [self destination]\r\t\tifFalse: \r\t\t\t[self isFirstSquare \r\t\t\t\tifTrue: [self nextSquare forwardBy: squares - 1]\r\t\t\t\tifFalse: [self previousSquare backwardBy: squares - 1]]',			#stamp : 'on 3/15/2006 15:26',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.006635+01:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BoardSquare,				#isMetaSide : false			},			#name : #destination,			#protocol : #playing,			#sourceCode : 'destination\r\t^ self',			#stamp : 'on 3/15/2006 15:26',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.00976+01:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BoardSquare,				#isMetaSide : false			},			#name : #'forwardBy:',			#protocol : #playing,			#sourceCode : 'forwardBy: squares\r\tself assert: self invariant.\r\t^ squares = 0 \r\t\tifTrue: [self destination]\r\t\tifFalse: \r\t\t\t[self isLastSquare \r\t\t\t\tifFalse: [self nextSquare forwardBy: squares - 1]\r\t\t\t\tifTrue: [self previousSquare backwardBy: squares - 1]]',			#stamp : 'on 3/18/2006 11:43',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.011625+01:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BoardSquare,				#isMetaSide : false			},			#name : #'landHere:',			#protocol : #playing,			#sourceCode : 'landHere: aPlayer\r\t^ self isOccupied\r\t\tifTrue: [ board firstSquare landHere: aPlayer ]\r\t\tifFalse: [ player := aPlayer. self ]',			#stamp : 'on 3/15/2006 15:43',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.013322+01:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BoardSquare,				#isMetaSide : false			},			#name : #nextSquare,			#protocol : #playing,			#sourceCode : 'nextSquare\r\tself assert: self isLastSquare not.\r\t^ board at: position + 1',			#stamp : 'on 3/14/2006 16:32',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.016059+01:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BoardSquare,				#isMetaSide : false			},			#name : #previousSquare,			#protocol : #playing,			#sourceCode : 'previousSquare\r\tself assert: self isFirstSquare not.\r\t^ board at: position - 1',			#stamp : 'on 3/14/2006 16:32',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.018015+01:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BoardSquare,				#isMetaSide : false			},			#name : #'remove:',			#protocol : #playing,			#sourceCode : 'remove: aPlayer\r\tself assert: player = aPlayer.\r\tplayer := nil.',			#stamp : 'on 3/14/2006 16:14',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.02011+01:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BoardSquare,				#isMetaSide : false			},			#name : #contents,			#protocol : #printing,			#sourceCode : 'contents\r\t^ self isOccupied\r\t\tifTrue: [ \' \', player asString ]\r\t\tifFalse: [ \'\' ]',			#stamp : 'on 3/14/2006 17:18',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.022193+01:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BoardSquare,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\taStream nextPutAll: \'[\', position printString, self contents, \']\'.',			#stamp : 'on 3/14/2006 16:08',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.025355+01:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BoardSquare,				#isMetaSide : false			},			#name : #invariant,			#protocol : #initialize-release,			#sourceCode : 'invariant\r\t^ board notNil\r\t\tand: [ position notNil\r\t\tand: [ position >= 0 \r\t\tand: [ position <= board lastPosition]]]',			#stamp : 'jjddpp 9/4/2012 12:23',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.027377+01:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BoardSquare,				#isMetaSide : false			},			#name : #'setPosition:board:',			#protocol : #initialize-release,			#sourceCode : 'setPosition: aNumber board: aBoard \r\tposition := aNumber.\r\tboard := aBoard',			#stamp : 'on 3/18/2006 15:13',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.029316+01:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BoardSquare,				#isMetaSide : false			},			#name : #isFirstSquare,			#protocol : #testing,			#sourceCode : 'isFirstSquare\r\t^ position = 1',			#stamp : 'on 3/14/2006 16:12',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.03222+01:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BoardSquare,				#isMetaSide : false			},			#name : #isLastSquare,			#protocol : #testing,			#sourceCode : 'isLastSquare\r\t^ position = board lastPosition',			#stamp : 'on 3/20/2006 10:17',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.034229+01:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BoardSquare,				#isMetaSide : false			},			#name : #isOccupied,			#protocol : #testing,			#sourceCode : 'isOccupied\r\t^ player notNil',			#stamp : 'on 3/14/2006 16:40',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.036418+01:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BoardSquare,				#isMetaSide : false			},			#name : #position,			#protocol : #testing,			#sourceCode : 'position\r\t^ position',			#stamp : 'on 3/14/2006 17:03',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.039374+01:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'BoardSquare',				#traitCompositionSource : '{}',				#definitionSource : 'BoardSquare subclass: #LadderSquare\r\tinstanceVariableNames: \'forward\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #LadderSquare,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LadderSquare,						#isMetaSide : false					},					#name : #forward,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LadderSquare class\r\tinstanceVariableNames: \'\''				},				#name : #'LadderSquare class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LadderSquare,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.04017+01:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'BoardSquare',				#traitCompositionSource : '{}',				#definitionSource : 'BoardSquare subclass: #LadderSquare\r\tinstanceVariableNames: \'forward\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #LadderSquare,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LadderSquare,						#isMetaSide : false					},					#name : #forward,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LadderSquare class\r\tinstanceVariableNames: \'\''				},				#name : #'LadderSquare class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LadderSquare,					#isMetaSide : false				},				#parent : @7,				#content : 'Responsibilities:\r- If a player lands here, send him or her up the ladder (forward # squares)\r- Displays itself as a square with a positive offset, e.g., [6]3+>',				#stamp : 'on 3/17/2006 10:36'			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Responsibilities:\r- If a player lands here, send him or her up the ladder (forward # squares)\r- Displays itself as a square with a positive offset, e.g., [6]3+>',		#newStamp : 'on 3/17/2006 10:36'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.043246+01:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LadderSquare,				#isMetaSide : false			},			#name : #destination,			#protocol : #playing,			#sourceCode : 'destination\r\t^ self forwardBy: forward',			#stamp : 'on 3/15/2006 15:26',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.045558+01:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LadderSquare,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\tsuper printOn: aStream.\r\taStream nextPutAll: forward asString, \'+>\'.',			#stamp : 'on 3/16/2006 14:35',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.047497+01:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LadderSquare,				#isMetaSide : false			},			#name : #'setForward:',			#protocol : #initialize-release,			#sourceCode : 'setForward: aNumber\r\tforward := aNumber.',			#stamp : 'on 3/18/2006 12:49',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.051356+01:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'LadderSquare class',				#isMetaSide : true			},			#name : #'forward:',			#protocol : #'instance creation',			#sourceCode : 'forward: number\r\t^ self new setForward: number',			#stamp : 'on 3/18/2006 12:50',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.05432+01:00' ],		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'BoardSquare',				#traitCompositionSource : '{}',				#definitionSource : 'BoardSquare subclass: #FirstSquare\r\tinstanceVariableNames: \'players\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #FirstSquare,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #FirstSquare,						#isMetaSide : false					},					#name : #players,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'FirstSquare class\r\tinstanceVariableNames: \'\''				},				#name : #'FirstSquare class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #FirstSquare,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.055104+01:00' ],		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'BoardSquare',				#traitCompositionSource : '{}',				#definitionSource : 'BoardSquare subclass: #FirstSquare\r\tinstanceVariableNames: \'players\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #FirstSquare,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #FirstSquare,						#isMetaSide : false					},					#name : #players,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'FirstSquare class\r\tinstanceVariableNames: \'\''				},				#name : #'FirstSquare class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #FirstSquare,					#isMetaSide : false				},				#parent : @7,				#content : 'Responsibilities:\r- Allows multiple players to be added or removed [normal squares can only hold a single player]',				#stamp : 'on 3/14/2006 19:06'			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Responsibilities:\r- Allows multiple players to be added or removed [normal squares can only hold a single player]',		#newStamp : 'on 3/14/2006 19:06'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.057332+01:00' ],		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FirstSquare,				#isMetaSide : false			},			#name : #contents,			#protocol : #printing,			#sourceCode : 'contents\r\t^ players inject: \'\' into:\r\t\t\t[ :list :each | list , \' \', each asString ]',			#stamp : 'on 3/14/2006 15:35',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.059453+01:00' ],		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FirstSquare,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tplayers := OrderedCollection new.',			#stamp : 'on 3/14/2006 15:30',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.062417+01:00' ],		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FirstSquare,				#isMetaSide : false			},			#name : #'landHere:',			#protocol : #initialize-release,			#sourceCode : 'landHere: aPlayer\r\tplayers add: aPlayer.',			#stamp : 'on 3/15/2006 15:29',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.064437+01:00' ],		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FirstSquare,				#isMetaSide : false			},			#name : #isOccupied,			#protocol : #testing,			#sourceCode : 'isOccupied\r\t^ players size > 0',			#stamp : 'on 3/18/2006 11:10',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.066605+01:00' ],		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #FirstSquare,				#isMetaSide : false			},			#name : #'remove:',			#protocol : #playing,			#sourceCode : 'remove: aPlayer\r\tself assert: (players includes: aPlayer).\r\tplayers remove: aPlayer.',			#stamp : 'on 3/14/2006 16:15',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.069198+01:00' ],		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #MetaclassHierarchyTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #MetaclassHierarchyTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MetaclassHierarchyTest class\r\tinstanceVariableNames: \'\''				},				#name : #'MetaclassHierarchyTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MetaclassHierarchyTest,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.07093+01:00' ],		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #MetaclassHierarchyTest\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #MetaclassHierarchyTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MetaclassHierarchyTest class\r\tinstanceVariableNames: \'\''				},				#name : #'MetaclassHierarchyTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MetaclassHierarchyTest,					#isMetaSide : false				},				#parent : @7,				#content : 'Demonstrate the relationship between classes and metaclasses',				#stamp : 'on 3/19/2006 11:33'			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Demonstrate the relationship between classes and metaclasses',		#newStamp : 'on 3/19/2006 11:33'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.074006+01:00' ],		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MetaclassHierarchyTest,				#isMetaSide : false			},			#name : #testHierarchy,			#protocol : #running,			#sourceCode : 'testHierarchy\r\t"The class hierarchy"\r\tself assert: SnakeSquare superclass = BoardSquare.\r\tself assert: BoardSquare superclass = Object.\r\tself assert: Object superclass superclass = nil.\r\t"The parallel metaclass hierarchy"\r\tself assert: SnakeSquare class name = \'SnakeSquare class\'.\r\tself assert: SnakeSquare class superclass = BoardSquare class.\r\tself assert: BoardSquare class superclass = Object class.\r\tself assert: Object class superclass superclass = Class.\r\tself assert: Class superclass = ClassDescription.\r\tself assert: ClassDescription superclass = Behavior.\r\tself assert: Behavior superclass = Object.\r\t"The Metaclass hierarchy"\r\tself assert: SnakeSquare class class = Metaclass.\r\tself assert: BoardSquare class class = Metaclass.\r\tself assert: Object class class = Metaclass.\r\tself assert: Class class class = Metaclass.\r\tself assert: ClassDescription class class = Metaclass.\r\tself assert: Behavior class class = Metaclass.\r\tself assert: Metaclass superclass = ClassDescription.\r\t"The fixpoint"\r\tself assert: Metaclass class class = Metaclass',			#stamp : 'on 10/28/2007 15:49',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.076651+01:00' ],		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Die',				#traitCompositionSource : '{}',				#definitionSource : 'Die subclass: #LoadedDie\r\tinstanceVariableNames: \'roll\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #LoadedDie,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LoadedDie,						#isMetaSide : false					},					#name : #roll,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LoadedDie class\r\tinstanceVariableNames: \'\''				},				#name : #'LoadedDie class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LoadedDie,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.07741+01:00' ],		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Die',				#traitCompositionSource : '{}',				#definitionSource : 'Die subclass: #LoadedDie\r\tinstanceVariableNames: \'roll\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #LoadedDie,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LoadedDie,						#isMetaSide : false					},					#name : #roll,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LoadedDie class\r\tinstanceVariableNames: \'\''				},				#name : #'LoadedDie class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LoadedDie,					#isMetaSide : false				},				#parent : @7,				#content : 'For testing purposes. When rolled, a loaded die returns a fixed value.',				#stamp : 'on 3/17/2006 10:50'			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'For testing purposes. When rolled, a loaded die returns a fixed value.',		#newStamp : 'on 3/17/2006 10:50'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.079445+01:00' ],		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoadedDie,				#isMetaSide : false			},			#name : #roll,			#protocol : #playing,			#sourceCode : 'roll\r\tself assert: roll notNil.\r\t^ roll',			#stamp : 'on 3/18/2006 15:24',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.082698+01:00' ],		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LoadedDie,				#isMetaSide : false			},			#name : #'roll:',			#protocol : #playing,			#sourceCode : 'roll: aNumber\r\tself assert: ((1 to: 6) includes: aNumber).\r\troll := aNumber.',			#stamp : 'on 3/18/2006 15:25',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.085361+01:00' ],		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'BoardSquare',				#traitCompositionSource : '{}',				#definitionSource : 'BoardSquare subclass: #SnakeSquare\r\tinstanceVariableNames: \'back\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #SnakeSquare,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeSquare,						#isMetaSide : false					},					#name : #back,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeSquare class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeSquare class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeSquare,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.086118+01:00' ],		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'BoardSquare',				#traitCompositionSource : '{}',				#definitionSource : 'BoardSquare subclass: #SnakeSquare\r\tinstanceVariableNames: \'back\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #SnakeSquare,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeSquare,						#isMetaSide : false					},					#name : #back,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeSquare class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeSquare class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeSquare,					#isMetaSide : false				},				#parent : @7,				#content : 'Responsibilities:\r- If a player lands here, send him or her backwards (back # squares)\r- Displays itself as a square with a negative offset, e.g., <-3[5]',				#stamp : 'on 3/20/2006 09:14'			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Responsibilities:\r- If a player lands here, send him or her backwards (back # squares)\r- Displays itself as a square with a negative offset, e.g., <-3[5]',		#newStamp : 'on 3/20/2006 09:14'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.088582+01:00' ],		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeSquare,				#isMetaSide : false			},			#name : #destination,			#protocol : #playing,			#sourceCode : 'destination\r\t^ self backwardBy: back',			#stamp : 'on 3/15/2006 15:26',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.092065+01:00' ],		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeSquare,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\taStream nextPutAll: \'<-\', back asString.\r\tsuper printOn: aStream.',			#stamp : 'on 3/16/2006 14:35',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.094279+01:00' ],		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeSquare,				#isMetaSide : false			},			#name : #'setBack:',			#protocol : #initialize-release,			#sourceCode : 'setBack: aNumber\r\tback := aNumber.',			#stamp : 'on 3/18/2006 12:50',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.097342+01:00' ],		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'SnakeSquare class',				#isMetaSide : true			},			#name : #'back:',			#protocol : #'instance creation',			#sourceCode : 'back: number\r\t^ self new setBack: number',			#stamp : 'on 3/18/2006 12:50',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.099986+01:00' ],		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #SnakesAndLaddersTest\r\tinstanceVariableNames: \'eg loadedDie jack jill\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #SnakesAndLaddersTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLaddersTest,						#isMetaSide : false					},					#name : #eg,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLaddersTest,						#isMetaSide : false					},					#name : #loadedDie,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLaddersTest,						#isMetaSide : false					},					#name : #jack,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLaddersTest,						#isMetaSide : false					},					#name : #jill,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakesAndLaddersTest class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakesAndLaddersTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakesAndLaddersTest,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.100712+01:00' ],		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #SnakesAndLaddersTest\r\tinstanceVariableNames: \'eg loadedDie jack jill\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #SnakesAndLaddersTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLaddersTest,						#isMetaSide : false					},					#name : #eg,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLaddersTest,						#isMetaSide : false					},					#name : #loadedDie,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLaddersTest,						#isMetaSide : false					},					#name : #jack,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakesAndLaddersTest,						#isMetaSide : false					},					#name : #jill,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakesAndLaddersTest class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakesAndLaddersTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakesAndLaddersTest,					#isMetaSide : false				},				#parent : @7,				#content : 'Play a rigged game and check the results.',				#stamp : 'on 3/15/2006 13:24'			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Play a rigged game and check the results.',		#newStamp : 'on 3/15/2006 13:24'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.103783+01:00' ],		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLaddersTest,				#isMetaSide : false			},			#name : #example,			#protocol : #running,			#sourceCode : 'example\r\t^ SnakesAndLadders example',			#stamp : 'on 3/16/2006 09:58',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.106212+01:00' ],		#prior : OmReference [ '84' ],		#self : OmReference [ '85' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLaddersTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\teg := self example.\r\tloadedDie := LoadedDie new.\r\teg setDie: loadedDie.\r\tjack := eg players first.\r\tjill := eg players last.',			#stamp : 'on 3/16/2006 09:58',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.110403+01:00' ],		#prior : OmReference [ '85' ],		#self : OmReference [ '86' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLaddersTest,				#isMetaSide : false			},			#name : #testExample,			#protocol : #running,			#sourceCode : 'testExample\r\tself assert: eg currentPlayer = jack.\r\tloadedDie roll: 1.\r\teg playOneMove.\r\tself assert: jack position = 6.\r\tself assert: eg currentPlayer = jill.\r\tloadedDie roll: 5.\r\teg playOneMove.\r\tself assert: jill position = 1.\r\tself assert: eg currentPlayer = jack.\r\tloadedDie roll: 5.\r\teg playOneMove.\r\tself assert: jack position = 5.\r\tself assert: eg currentPlayer = jill.\r\tloadedDie roll: 4.\r\teg playOneMove.\r\tself assert: jill position = 1.\r\tself assert: eg currentPlayer = jack.\r\tloadedDie roll: 6.\r\teg playOneMove.\r\tself assert: jack position = 5.\r\tself assert: eg currentPlayer = jill.\r\tloadedDie roll: 6.\r\teg playOneMove.\r\tself assert: jill position = 9.\r\tself assert: eg currentPlayer = jack.\r\tloadedDie roll: 5.\r\teg playOneMove.\r\tself assert: jack position = 10.\r\tself assert: eg currentPlayer = jill.\r\tloadedDie roll: 5.\r\teg playOneMove.\r\tself assert: jill position = 1.\r\tself assert: eg currentPlayer = jack.\r\tloadedDie roll: 2.\r\teg playOneMove.\r\tself assert: jack position = 12.\r\tself assert: eg isOver',			#stamp : 'on 3/23/2006 09:06',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.113451+01:00' ],		#prior : OmReference [ '86' ],		#self : OmReference [ '87' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLaddersTest,				#isMetaSide : false			},			#name : #testStartPosition,			#protocol : #running,			#sourceCode : 'testStartPosition\r\tself assert: eg lastPosition = 12.\r\tself assert: eg isNotOver.\r\tself assert: eg currentPlayer = jack.\r\tself assert: eg firstSquare isFirstSquare.\r\tself assert: eg firstSquare isLastSquare not.\r\tself assert: eg firstSquare position = 1.\r\tself assert: eg firstSquare isOccupied.\r\tself assert: (eg at: eg lastPosition) isFirstSquare not.\r\tself assert: (eg at: eg lastPosition) isLastSquare.\r\tself assert: (eg at: eg lastPosition) position = 12.\r\tself assert: (eg at: eg lastPosition) isOccupied not.\r\tself assert: jack name = \'Jack\'.\r\tself assert: jill name = \'Jill\'.\r\tself assert: jack position = 1.\r\tself assert: jill position = 1',			#stamp : 'on 3/18/2006 15:01',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.116008+01:00' ],		#prior : OmReference [ '87' ],		#self : OmReference [ '88' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'SnakesAndLaddersTest',				#traitCompositionSource : '{}',				#definitionSource : 'SnakesAndLaddersTest subclass: #SnakesAndLaddersTest2\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #SnakesAndLaddersTest2,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakesAndLaddersTest2 class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakesAndLaddersTest2 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakesAndLaddersTest2,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.116747+01:00' ],		#prior : OmReference [ '88' ],		#self : OmReference [ '89' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'SnakesAndLaddersTest',				#traitCompositionSource : '{}',				#definitionSource : 'SnakesAndLaddersTest subclass: #SnakesAndLaddersTest2\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Examples-SnakesAndLadders\''			},			#name : #SnakesAndLaddersTest2,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakesAndLaddersTest2 class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakesAndLaddersTest2 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakesAndLaddersTest2,					#isMetaSide : false				},				#parent : @7,				#content : 'Some tests for a second example.',				#stamp : 'on 3/17/2006 10:50'			},			#classVariables : OrderedCollection [ ],			#category : #Examples-SnakesAndLadders,			#package : #Examples-SnakesAndLadders,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Some tests for a second example.',		#newStamp : 'on 3/17/2006 10:50'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.119025+01:00' ],		#prior : OmReference [ '89' ],		#self : OmReference [ '90' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLaddersTest2,				#isMetaSide : false			},			#name : #example,			#protocol : #running,			#sourceCode : 'example\r\t^ SnakesAndLadders example2',			#stamp : 'on 3/16/2006 09:59',			#package : #Examples-SnakesAndLadders		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-01-12T15:25:01.123608+01:00' ],		#prior : OmReference [ '90' ],		#self : OmReference [ '91' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakesAndLaddersTest2,				#isMetaSide : false			},			#name : #testExample,			#protocol : #running,			#sourceCode : 'testExample\r\tself assert: jack name = \'Jack\'.\r\tself assert: jill name = \'Jill\'.\r\tself assert: jack position = 1.\r\tself assert: jill position = 1.\r\tself assert: eg currentPlayer = jack.\r\tloadedDie roll: 1.\r\teg playOneMove.\r\tself assert: jack position = 2.\r\tself assert: eg currentPlayer = jill.\r\tloadedDie roll: 2.\r\teg playOneMove.\r\tself assert: jill position = 7.\r\tself assert: eg currentPlayer = jack.\r\tloadedDie roll: 3.\r\teg playOneMove.\r\tself assert: jack position = 5.\r\tself assert: eg currentPlayer = jill.\r\tloadedDie roll: 1.\r\teg playOneMove.\r\tself assert: jill position = 7.\r\tself assert: eg currentPlayer = jack.\r\tloadedDie roll: 2.\r\teg playOneMove.\r\tself assert: jack position = 1.\r\tself assert: eg currentPlayer = jill.\r\tloadedDie roll: 5.\r\teg playOneMove.\r\tself assert: jill position = 12.\r\tself assert: eg currentPlayer = jack.\r\tloadedDie roll: 6.\r\teg playOneMove.\r\tself assert: jack position = 7.\r\tself assert: eg currentPlayer = jill.\r\tloadedDie roll: 1.\r\teg playOneMove.\r\tself assert: jill position = 13.\r\tself assert: eg isOver',			#stamp : 'on 3/18/2006 15:04',			#package : #Examples-SnakesAndLadders		}	}}