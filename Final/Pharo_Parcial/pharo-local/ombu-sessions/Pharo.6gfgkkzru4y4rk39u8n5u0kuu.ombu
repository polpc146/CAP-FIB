OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-11-07T08:34:49.696289+01:00' ],		#prior : OmReference [ 'Pharo.5ksgqfomqmnlrgpfl6u59v9qj', '75' ],		#self : OmReference [ '1' ]	},	#content : EpMonticelloVersionSave {		#versionName : 'DevilsAndAngels-jjddpp.5',		#repositoryDescription : '/dades/jordi.delgado/linux/CAP/Tema2-Reflexio/pharo-local/package-cache'	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-11-07T08:34:49.698454+01:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMonticelloVersionsLoad {		#versionNames : OrderedCollection [			'DevilsAndAngels-jjddpp.5'		]	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ],		#time : DateAndTime [ '2019-11-07T08:34:49.813675+01:00' ],		#trigger : @3	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Tardis\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #Tardis,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Tardis class\r\tinstanceVariableNames: \'past future\''				},				#name : #'Tardis class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Tardis class',							#isMetaSide : true						},						#name : #past,						#parent : @12					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Tardis class',							#isMetaSide : true						},						#name : #future,						#parent : @12					}				],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Tardis,					#isMetaSide : false				},				#parent : @7,				#content : 'A HeavenHell is .\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A HeavenHell is .\r',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ],		#time : DateAndTime [ '2019-11-07T08:34:49.814409+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpCategoryAddition {		#classCategoryName : #DevilsAndAngels,		#affectedPackageName : #DevilsAndAngels	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ],		#time : DateAndTime [ '2019-11-07T08:34:49.815748+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Tardis\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'DevilsAndAngels\''			},			#name : #Tardis,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Tardis class\r\tinstanceVariableNames: \'past future\''				},				#name : #'Tardis class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Tardis class',							#isMetaSide : true						},						#name : #past,						#parent : @13					},					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'Tardis class',							#isMetaSide : true						},						#name : #future,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Tardis,					#isMetaSide : false				},				#parent : @8,				#content : 'A HeavenHell is .\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #DevilsAndAngels,			#package : #DevilsAndAngels,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ],		#time : DateAndTime [ '2019-11-07T08:34:49.818823+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #TestAlgorithms\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #TestAlgorithms,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TestAlgorithms class\r\tinstanceVariableNames: \'aux\''				},				#name : #'TestAlgorithms class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'TestAlgorithms class',							#isMetaSide : true						},						#name : #aux,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TestAlgorithms,					#isMetaSide : false				},				#parent : @8,				#content : 'A TestAlgorithms is .\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A TestAlgorithms is .\r',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ],		#time : DateAndTime [ '2019-11-07T08:34:49.820604+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #TestAlgorithms\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'DevilsAndAngels\''			},			#name : #TestAlgorithms,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TestAlgorithms class\r\tinstanceVariableNames: \'aux\''				},				#name : #'TestAlgorithms class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [					RGClassInstanceVariableDefinition {						#annotations : IdentityDictionary {							#className : #'TestAlgorithms class',							#isMetaSide : true						},						#name : #aux,						#parent : @13					}				],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TestAlgorithms,					#isMetaSide : false				},				#parent : @8,				#content : 'A TestAlgorithms is .\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #DevilsAndAngels,			#package : #DevilsAndAngels,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ],		#time : DateAndTime [ '2019-11-07T08:34:49.824206+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Stack',				#traitCompositionSource : '{}',				#definitionSource : 'Stack subclass: #TimeLordsStack\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Unclassified\''			},			#name : #TimeLordsStack,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TimeLordsStack class\r\tinstanceVariableNames: \'\''				},				#name : #'TimeLordsStack class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TimeLordsStack,					#isMetaSide : false				},				#parent : @8,				#content : 'A HeavenlyStack is .\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Unclassified,			#package : 'nil',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'A HeavenlyStack is .\r',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ],		#time : DateAndTime [ '2019-11-07T08:34:49.825283+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Stack',				#traitCompositionSource : '{}',				#definitionSource : 'Stack subclass: #TimeLordsStack\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'DevilsAndAngels\''			},			#name : #TimeLordsStack,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TimeLordsStack class\r\tinstanceVariableNames: \'\''				},				#name : #'TimeLordsStack class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @8			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TimeLordsStack,					#isMetaSide : false				},				#parent : @8,				#content : 'A HeavenlyStack is .\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #DevilsAndAngels,			#package : #DevilsAndAngels,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ],		#time : DateAndTime [ '2019-11-07T08:34:49.849066+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #'angelPloraner:',			#protocol : #control-handling,			#sourceCode : 'angelPloraner: anObject \r\r\t^ Continuation callcc: [ :k | \t\r\t\t     self future push: k. \r\t\t     (self past pop) value: anObject  ]. ',			#stamp : 'jjddpp 11/23/2014 16:50',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ],		#time : DateAndTime [ '2019-11-07T08:34:49.850345+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #'doctor:',			#protocol : #control-handling,			#sourceCode : 'doctor: anObject \r\r\t^ (self future pop) value: anObject ',			#stamp : 'jjddpp 11/23/2014 16:49',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ],		#time : DateAndTime [ '2019-11-07T08:34:49.851443+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #'fita:',			#protocol : #control-handling,			#sourceCode : 'fita: anObject \t\r\r\t^ Continuation callcc: [ :k | self past push: k.  ^ anObject  ]. \r',			#stamp : 'jjddpp 11/23/2014 16:49',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ],		#time : DateAndTime [ '2019-11-07T08:34:49.852435+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #future,			#protocol : #accessing,			#sourceCode : 'future\r\t^ future',			#stamp : 'jjddpp 11/20/2014 16:55',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ],		#time : DateAndTime [ '2019-11-07T08:34:49.8533+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #'future:',			#protocol : #accessing,			#sourceCode : 'future: anObject\r\tfuture := anObject.',			#stamp : 'jjddpp 11/20/2014 17:19',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ],		#time : DateAndTime [ '2019-11-07T08:34:49.854193+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'initialize - release',			#sourceCode : 'initialize\r\tsuper initialize.\r\tself reset.\r\t',			#stamp : 'jjddpp 11/20/2014 16:54',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ],		#time : DateAndTime [ '2019-11-07T08:34:49.855097+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #past,			#protocol : #accessing,			#sourceCode : 'past \r\t^ past',			#stamp : 'jjddpp 11/20/2014 16:55',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ],		#time : DateAndTime [ '2019-11-07T08:34:49.857007+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #'past:',			#protocol : #accessing,			#sourceCode : 'past: anObject\r\tpast := anObject.',			#stamp : 'jjddpp 11/20/2014 17:18',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ],		#time : DateAndTime [ '2019-11-07T08:34:49.857888+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Tardis class',				#isMetaSide : true			},			#name : #reset,			#protocol : #'initialize - release',			#sourceCode : 'reset\r\tself past: TimeLordsStack new.\r\tself future: TimeLordsStack new.',			#stamp : 'jjddpp 11/23/2014 16:48',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ],		#time : DateAndTime [ '2019-11-07T08:34:49.85892+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TestAlgorithms class',				#isMetaSide : true			},			#name : #TardisExample,			#protocol : #Algorithms,			#sourceCode : 'TardisExample\r\tTardis initialize.\r\t(self auxWith: $a and: ( (self auxWith: $b and:  (Tardis fita: 3)) = 4 ) )\r\t\tifTrue: [  \tTranscript show: \'aqui!\'; cr.\r\t\t\t\t\tself auxWith: $c and: (Tardis doctor: \'tot va be\') .  ]\r\t\tifFalse: [ \r\t\t\t(self auxWith: $d and: ( (self auxWith: $e and:  (Tardis fita: 4)) = 5 ) )\r\t\t\t\tifTrue: [ self auxWith: $f and: (Tardis doctor: (self auxWith: $g and:  (Tardis angelPloraner: 4))) ]\r\t\t\t\tifFalse: [ Transcript show: \'hem arribat fins aqui!\'; cr. \r\t\t\t\t\t\t  self auxWith: $h and: (Tardis angelPloraner: 5).\t] ]',			#stamp : 'jjddpp 11/23/2014 16:51',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ],		#time : DateAndTime [ '2019-11-07T08:34:49.859905+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TestAlgorithms class',				#isMetaSide : true			},			#name : #'auxParenthesis:and:and:',			#protocol : #private,			#sourceCode : 'auxParenthesis: n and: p and: con \r\t|  tmpStack |\r\ttmpStack := con deepCopy.\r\tn = 0 ifTrue: [ con isEmpty ifTrue: [ 1 to: p - 1 do: [ : i | Transcript show: (aux at: i) asString  ]. \r\t\t\t\t\t\t\t\t\t\tTranscript cr.  ]\r\t\t\t\t\t\t\tifFalse: [ \t| nn |\r\t\t\t\t\t\t\t\t\t\taux at: p put: \')\'.\r\t\t\t\t\t\t\t\t\t\tnn := tmpStack pop.\r\t\t\t\t\t\t\t\t\t\tself auxParenthesis: nn and: (p + 1)  and: tmpStack.  ]  ]\r\t\tifFalse: [ \taux at: p put: \'(\'.\r\t\t\t\t\t 0 to: n - 1 do: [ : i |\r\t\t\t\t\t\t\t\t\ttmpStack push: (n - i - 1).\r\t\t\t\t\t\t\t\t\tself auxParenthesis: i and: p + 1 and: tmpStack.\r\t\t\t\t\t\t\t\t\ttmpStack pop.  ] ] \r\t\t\t\t\t\t\t',			#stamp : 'jjddpp 11/20/2014 16:24',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ],		#time : DateAndTime [ '2019-11-07T08:34:49.86078+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TestAlgorithms class',				#isMetaSide : true			},			#name : #'auxWith:and:',			#protocol : #private,			#sourceCode : 'auxWith: anObject and: anotherObject\r\tTranscript show: \'==> \', anObject asString , \' : \', anotherObject asString; cr.\r\t^ anotherObject\r\t',			#stamp : 'jjddpp 11/23/2014 16:43',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ],		#time : DateAndTime [ '2019-11-07T08:34:49.861656+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TestAlgorithms class',				#isMetaSide : true			},			#name : #'parenthesis:and:and:',			#protocol : #Algorithms,			#sourceCode : 'parenthesis: n and: p and: con \r\taux := Array new: (n * 2).\r\tself auxParenthesis: n and: p and: con.\r\t',			#stamp : 'jjddpp 11/20/2014 16:07',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ],		#time : DateAndTime [ '2019-11-07T08:34:49.86245+01:00' ],		#trigger : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TimeLordsStack,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\t"Returns the first element and remove it from the stack.\r\tThere will always be an identity function in the bottom of the stack"\r\r\tself isEmpty ifTrue: [ ^ [ :x | x ] ].\r\t^self removeFirst\r\t',			#stamp : 'jjddpp 10/28/2014 17:10',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-11-07T08:41:43.526241+01:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TestAlgorithms class',				#isMetaSide : true			},			#name : #TardisExample,			#protocol : #Algorithms,			#sourceCode : 'TardisExample\r\tTardis initialize.\r\t(self auxWith: $a and: ( (self auxWith: $b and:  (Tardis fita: 3)) = 4 ) )\r\t\tifTrue: [  \tTranscript show: \'aqui!\'; cr.\r\t\t\t\t\tself auxWith: $c and: (Tardis doctor: \'tot va be\') .  ]\r\t\tifFalse: [ \r\t\t\t(self auxWith: $d and: ( (self auxWith: $e and:  (Tardis fita: 4)) = 5 ) )\r\t\t\t\tifTrue: [ self auxWith: $f and: (Tardis doctor: (self auxWith: $g and:  (Tardis angelPloraner: 4))) ]\r\t\t\t\tifFalse: [ Transcript show: \'hem arribat fins aqui!\'; cr. \r\t\t\t\t\t\t  self auxWith: $h and: (Tardis angelPloraner: 5).\t] ]',			#stamp : 'jjddpp 11/23/2014 16:51',			#package : #DevilsAndAngels		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'TestAlgorithms class',				#isMetaSide : true			},			#name : #TardisExample,			#protocol : #Algorithms,			#sourceCode : 'TardisExample\r\t"TestAlgorithms TardisExample"\r\tTardis initialize.\r\t(self auxWith: $a and: ( (self auxWith: $b and:  (Tardis fita: 3)) = 4 ) )\r\t\tifTrue: [  \tTranscript show: \'aqui!\'; cr.\r\t\t\t\t\tself auxWith: $c and: (Tardis doctor: \'tot va be\') .  ]\r\t\tifFalse: [ \r\t\t\t(self auxWith: $d and: ( (self auxWith: $e and:  (Tardis fita: 4)) = 5 ) )\r\t\t\t\tifTrue: [ self auxWith: $f and: (Tardis doctor: (self auxWith: $g and:  (Tardis angelPloraner: 4))) ]\r\t\t\t\tifFalse: [ Transcript show: \'hem arribat fins aqui!\'; cr. \r\t\t\t\t\t\t  self auxWith: $h and: (Tardis angelPloraner: 5).\t] ]',			#stamp : 'jjddpp 11/7/2019 08:41',			#package : #DevilsAndAngels		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-11-07T08:58:11.881632+01:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object variableSubclass: #BlockClosure\r\tinstanceVariableNames: \'outerContext startpc numArgs\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Kernel-Methods\''			},			#name : #BlockClosure,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #BlockClosure,						#isMetaSide : false					},					#name : #outerContext,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #BlockClosure,						#isMetaSide : false					},					#name : #startpc,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #BlockClosure,						#isMetaSide : false					},					#name : #numArgs,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'BlockClosure class\r\tinstanceVariableNames: \'\''				},				#name : #'BlockClosure class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #BlockClosure,					#isMetaSide : false				},				#parent : @7,				#content : 'I contain a sequence of operations. I am defined by Smalltalk expressions inside square brackets. I permit to defer the enclosed operations until I execute a variant of #value. I can have my own arguments and temporaries as a regular method, but I am also able to use external variables: my enclosing method or block temporaries, arguments and receiver.\r\rexamples :\r[ 1 + 2 ] value\r[ :arg | \r\t| temp | \r\ttemp := arg. \r\ttemp ] value: 5\r[ ^ 5 ] value\r\rMy return value corresponds to my final expression. A non local return (^) has the same effect as if I did not exist: it returns from my enclosing method, even if I\'m nested in other blocks. \r\rImplementation:\r\rInstance variables:\r\touterContext <Context|nil> context that defined me\r\tstartpc: <SmallInteger> (pc = program counter) offset of my first bytecode instruction in the compiledMethod bytecode  \r\tnumArgs: <SmallInteger> my number of arguments\r\rI am created at runtime through a special bytecode:\rclosureNumCopied: x numArgs: y bytes z1 to z2\rOn creation, the currently executed context is set to my outerContext, z1 is set as my startpc and y is set as my numArgs. After my creation, the current execution flow jumps to my last bytecode, z2, to skip the execution of my bytecode which is deferred until I execute a variant of #value.\r\rI am executed when I receive a variant of the message value. This message creates a new context, a block context <MethodContext>, which reference me in its variable closureOrNil. This new context executes my bytecode, which correspond to a subset of the bytecode of my enclosing method, starting at startpc and ending in blockReturn/return bytecode.\r\rAccessing variables of the my enclosing context is different depending on variables because of various optimizations:\r- self: I access the receiver of my enclosing method by accessing my context\'s receiver, which is always set to the enclosing method receiver.\r- copied variables: If I read a variable from an outerContext but I don\'t write into it and the variable is not modified after the BlockClosure creation, then the variable is copied in the blockClosure to be more efficient. \r- full variable: If I access and edit a variable from an outerContext, then the variable is stored in an external heap allocated array (named tempVector). The tempVector is known by the method and the block so they can both read and write these variables.\r\rOptimized block closures: \rCommon blocks (2/3 of the blocks) are optimized directly in the compiler and have special behaviors. These blocks are the arguments/receiver of control structures: #ifNil:, #ifNotNil:, #ifTrue:, #ifFalse:, #whileTrue:, #whileFalse:, #to:do:, #to:by:do: .\r',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Kernel-Methods,			#package : #Kernel,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*ProvesCAP2019'	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-11-07T09:00:03.708284+01:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'whileTrueTardis:',			#protocol : #'*ProvesCAP2019',			#sourceCode : 'whileTrueTardis: aBlock\r\tTardis initialize.\r\tTardis fita: nil.\r\tself value ifTrue: [ aBlock value. Tardis angelPloraner: nil. ]\r\t\t\t\tifFalse: [ Tardis initialize. ^ nil ]\r\t',			#stamp : 'jjddpp 11/7/2019 09:00',			#package : #ProvesCAP2019		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-11-07T09:08:44.148085+01:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'whileTrueTardis:',			#protocol : #'*ProvesCAP2019',			#sourceCode : 'whileTrueTardis: aBlock\r\tTardis initialize.\r\tTardis fita: nil.\r\tself value ifTrue: [ aBlock value. Tardis angelPloraner: nil. ]\r\t\t\t\tifFalse: [ Tardis initialize. ^ nil ]\r\t',			#stamp : 'jjddpp 11/7/2019 09:00',			#package : #ProvesCAP2019		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'whileTrueTardis:',			#protocol : #'*ProvesCAP2019',			#sourceCode : 'whileTrueTardis: aBlock\r\tTardis initialize.\r\tTardis fita: nil.\r\tTardis fita: nil.\r\tself value ifTrue: [ aBlock value. Tardis angelPloraner: nil. ]\r\t\t\t\tifFalse: [ Tardis initialize. ^ nil ]\r\t',			#stamp : 'jjddpp 11/7/2019 09:08',			#package : #ProvesCAP2019		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-11-07T09:16:27.344494+01:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'whileTrueTardis:',			#protocol : #'*ProvesCAP2019',			#sourceCode : 'whileTrueTardis: aBlock\r\tTardis initialize.\r\tTardis fita: nil.\r\tTardis fita: nil.\r\tself value ifTrue: [ aBlock value. Tardis angelPloraner: nil. ]\r\t\t\t\tifFalse: [ Tardis initialize. ^ nil ]\r\t',			#stamp : 'jjddpp 11/7/2019 09:08',			#package : #ProvesCAP2019		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'whileTrueTardis:',			#protocol : #'*ProvesCAP2019',			#sourceCode : 'whileTrueTardis: aBlock\r\tTardis initialize.\r\t2 timesRepeat: [ Tardis fita: nil. ].\r\tself value ifTrue: [ aBlock value. Tardis angelPloraner: nil. ]\r\t\t\t\tifFalse: [ Tardis initialize. ^ nil ]\r\t',			#stamp : 'jjddpp 11/7/2019 09:16',			#package : #ProvesCAP2019		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-11-07T09:17:00.417247+01:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'whileTrueTardis:',			#protocol : #'*ProvesCAP2019',			#sourceCode : 'whileTrueTardis: aBlock\r\tTardis initialize.\r\t2 timesRepeat: [ Tardis fita: nil. ].\r\tself value ifTrue: [ aBlock value. Tardis angelPloraner: nil. ]\r\t\t\t\tifFalse: [ Tardis initialize. ^ nil ]\r\t',			#stamp : 'jjddpp 11/7/2019 09:16',			#package : #ProvesCAP2019		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'whileTrueTardis:',			#protocol : #'*ProvesCAP2019',			#sourceCode : 'whileTrueTardis: aBlock\r\tTardis initialize.\r\tTardis fita: nil. \r\tTardis fita: nil. \r\tself value ifTrue: [ aBlock value. Tardis angelPloraner: nil. ]\r\t\t\t\tifFalse: [ Tardis initialize. ^ nil ]\r\t',			#stamp : 'jjddpp 11/7/2019 09:17',			#package : #ProvesCAP2019		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-11-07T09:18:17.557234+01:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'whileTrueTardis:',			#protocol : #'*ProvesCAP2019',			#sourceCode : 'whileTrueTardis: aBlock\r\tTardis initialize.\r\tTardis fita: nil. \r\tTardis fita: nil. \r\tself value ifTrue: [ aBlock value. Tardis angelPloraner: nil. ]\r\t\t\t\tifFalse: [ Tardis initialize. ^ nil ]\r\t',			#stamp : 'jjddpp 11/7/2019 09:17',			#package : #ProvesCAP2019		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'whileTrueTardis:',			#protocol : #'*ProvesCAP2019',			#sourceCode : 'whileTrueTardis: aBlock\r\tTardis initialize.\r\t#(1 2) do: [ Tardis fita: nil. ]. \r\tself value ifTrue: [ aBlock value. Tardis angelPloraner: nil. ]\r\t\t\t\tifFalse: [ Tardis initialize. ^ nil ]\r\t',			#stamp : 'jjddpp 11/7/2019 09:18',			#package : #ProvesCAP2019		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-11-07T09:18:50.126009+01:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'whileTrueTardis:',			#protocol : #'*ProvesCAP2019',			#sourceCode : 'whileTrueTardis: aBlock\r\tTardis initialize.\r\t#(1 2) do: [ Tardis fita: nil. ]. \r\tself value ifTrue: [ aBlock value. Tardis angelPloraner: nil. ]\r\t\t\t\tifFalse: [ Tardis initialize. ^ nil ]\r\t',			#stamp : 'jjddpp 11/7/2019 09:18',			#package : #ProvesCAP2019		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'whileTrueTardis:',			#protocol : #'*ProvesCAP2019',			#sourceCode : 'whileTrueTardis: aBlock\r\tTardis initialize.\r\t#(1 2) do: [ :i |  Tardis fita: nil. ]. \r\tself value ifTrue: [ aBlock value. Tardis angelPloraner: nil. ]\r\t\t\t\tifFalse: [ Tardis initialize. ^ nil ]\r\t',			#stamp : 'jjddpp 11/7/2019 09:18',			#package : #ProvesCAP2019		}	}}OmEntry {	#tags : {		#author : 'jjddpp',		#time : DateAndTime [ '2019-11-07T09:19:21.218316+01:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'whileTrueTardis:',			#protocol : #'*ProvesCAP2019',			#sourceCode : 'whileTrueTardis: aBlock\r\tTardis initialize.\r\t#(1 2) do: [ :i |  Tardis fita: nil. ]. \r\tself value ifTrue: [ aBlock value. Tardis angelPloraner: nil. ]\r\t\t\t\tifFalse: [ Tardis initialize. ^ nil ]\r\t',			#stamp : 'jjddpp 11/7/2019 09:18',			#package : #ProvesCAP2019		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'whileTrueTardis:',			#protocol : #'*ProvesCAP2019',			#sourceCode : 'whileTrueTardis: aBlock\r\tTardis initialize.\r\tTardis fita: nil.\r\tself value ifTrue: [ aBlock value. Tardis angelPloraner: nil. ]\r\t\t\t\tifFalse: [ Tardis initialize. ^ nil ]\r\t',			#stamp : 'jjddpp 11/7/2019 09:19',			#package : #ProvesCAP2019		}	}}